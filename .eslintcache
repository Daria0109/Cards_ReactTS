[{"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\index.tsx":"1","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m3-bll\\test-reducer.ts":"2","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f4-setPassword\\SetPassword.tsx":"3","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m4-dal\\authAPI.ts":"4","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m2-components\\Routes\\Routes.tsx":"5","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m2-components\\Header\\Header.tsx":"6","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f7-card\\Card.tsx":"7","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m4-dal\\cardAPI.ts":"8","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m3-bll\\card-reducer.ts":"9","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m1-app\\App.tsx":"10","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f7-card\\Card_table.tsx":"11","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f0-test\\Test.tsx":"12","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f3-profile\\Profile.tsx":"13","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f6-error404\\Error404.tsx":"14"},{"size":663,"mtime":1613225794934,"results":"15","hashOfConfig":"16"},{"size":262,"mtime":1613225794946,"results":"17","hashOfConfig":"16"},{"size":2514,"mtime":1613225937322,"results":"18","hashOfConfig":"16"},{"size":1944,"mtime":1613225937329,"results":"19","hashOfConfig":"16"},{"size":1656,"mtime":1613228444017,"results":"20","hashOfConfig":"16"},{"size":1639,"mtime":1613228508065,"results":"21","hashOfConfig":"16"},{"size":815,"mtime":1613322174424,"results":"22","hashOfConfig":"16"},{"size":410,"mtime":1613409410119,"results":"23","hashOfConfig":"16"},{"size":2418,"mtime":1613324196491,"results":"24","hashOfConfig":"16"},{"size":711,"mtime":1613312797622,"results":"25","hashOfConfig":"16"},{"size":3944,"mtime":1613326505401,"results":"26","hashOfConfig":"16"},{"size":80,"mtime":1613225937318,"results":"27","hashOfConfig":"16"},{"size":2803,"mtime":1613225937321,"results":"28","hashOfConfig":"16"},{"size":565,"mtime":1613225794933,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lvibow",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\index.tsx",[],["62","63"],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m3-bll\\test-reducer.ts",[],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f4-setPassword\\SetPassword.tsx",[],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m4-dal\\authAPI.ts",["64"],"import axios from \"axios\";\r\nimport {LoginDataType, RegDataType} from '../m3-bll/auth-reducer';\r\n\r\nconst baseLocalhostURL = 'http://localhost:7542/2.0/'\r\nconst baseHerokuURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: baseLocalhostURL,\r\n\twithCredentials: true,\r\n})\r\n\r\ntype ResponseUserType = {\r\n\tcreated: string\r\n\temail: string\r\n\tisAdmin: boolean\r\n\tname: string\r\n\tpublicCardPacksCount: number\r\n\trememberMe: boolean\r\n\ttoken: string\r\n\ttokenDeathTime: string\r\n\tupdated: string\r\n\tverified: boolean\r\n\t__v: number\r\n\t_id: string\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n\tsignUp(registrationData: RegDataType) {\r\n\t\treturn instance.post(\"auth/register\", registrationData)\r\n\t\t\t.then(res => res)\r\n\t},\r\n\tme() {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/me\", {})\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tlogin(loginData: LoginDataType) {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/login\", loginData)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete('auth/me')\r\n\t\t\t.then(res => res)\r\n\t},\r\n\tsendEmail(email: string) {\r\n\t\treturn instance.post('auth/forgot', {\r\n\t\t\temail: email,\r\n\t\t\tfrom: 'test-front-admin <ai73a@yandex.by>',\r\n\t\t\tmessage: '<div style=\\'background-color: lime; padding: 15px\\'>' +\r\n\t\t\t\t' password recovery link:' +\r\n\t\t\t\t' <a href=\\'https://daria0109.github.io/Cards_ReactTS/#/set/$token$\\'> link</a></div>'\r\n\t\t}).then(res => res)\r\n\t},\r\n\tsetPassword(password: string, token: string) {\r\n\t\treturn instance.post('auth/set-new-password', {\r\n\t\t\tpassword,\r\n\t\t\tresetPasswordToken: token\r\n\t\t}).then(res => res)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n// created: \"2021-02-07T19:05:49.207Z\"\r\n// email: \"sergdiag19@gmail.com\"\r\n// isAdmin: false\r\n// name: \"sergdiag19@gmail.com\"\r\n// publicCardPacksCount: 0\r\n// rememberMe: false\r\n// token: \"44e9b950-6af2-11eb-a3aa-43f1dde77f4b\"\r\n// tokenDeathTime: 1612898233573\r\n// updated: \"2021-02-09T16:17:13.574Z\"\r\n// verified: false\r\n// __v: 0\r\n// _id: \"60203a0d5c268c2adcce842a\"","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m2-components\\Routes\\Routes.tsx",["65"],"import React from 'react';\r\nimport {Redirect, Route, Switch, useParams} from 'react-router-dom';\r\nimport {Test} from '../../../features/f0-test/Test';\r\nimport {Login} from '../../../features/f1-login/Login';\r\nimport {SignUp} from '../../../features/f2-signUp/SignUp';\r\nimport {Profile} from '../../../features/f3-profile/Profile';\r\nimport {Error404} from '../../../features/f6-error404/Error404';\r\nimport {RefreshPassword} from '../../../features/f5-refreshPassword/RefreshPassword';\r\nimport {SetPassword} from '../../../features/f4-setPassword/SetPassword';\r\nimport { Card } from '../../../features/f7-card/Card';\r\n\r\nexport const PATH = {\r\n  TEST: '/test',\r\n  LOGIN: '/login',\r\n  SIGNUP: '/signup',\r\n  CARD: '/card',\r\n  PROFILE: '/profile',\r\n  REFRESH: '/refresh',\r\n  SET_TOKEN: '/set/:token',\r\n  SET: '/set',\r\n  ERROR404: '/404'\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n\r\n  return <>\r\n      <Switch>\r\n        <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n        <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n        <Route path={PATH.CARD} render={() => <Card/>}/>\r\n        <Route path={PATH.TEST} render={() => <Test/>}/>\r\n        <Route path={PATH.SIGNUP} render={() => <SignUp/>}/>\r\n        <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n        <Route path={PATH.REFRESH} render={() => <RefreshPassword/>}/>\r\n        <Route path={PATH.SET} exact render={() => <SetPassword/>}/>\r\n        <Route path={PATH.SET_TOKEN} render={() => <SetPassword/>}/>\r\n        <Route path={PATH.ERROR404} render={() => <Error404/>}/>\r\n\r\n        <Route render={() => <Redirect to={PATH.ERROR404}/>}/>\r\n      </Switch>\r\n    </>\r\n}\r\n","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m2-components\\Header\\Header.tsx",[],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f7-card\\Card.tsx",["66","67"],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m4-dal\\cardAPI.ts",["68"],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m3-bll\\card-reducer.ts",[],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\main\\m1-app\\App.tsx",["69","70","71"],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f7-card\\Card_table.tsx",[],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f0-test\\Test.tsx",[],"C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f3-profile\\Profile.tsx",["72","73"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from './Profile.module.css'\r\nimport {logout} from '../../main/m3-bll/auth-reducer';\r\nimport {initializeProfile, setProfileError} from '../../main/m3-bll/profile-reducer';\r\nimport {Preloader} from '../../main/m2-components/Preloader/Preloader';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport defaultAvatar from './../../assets/default-avatar.png'\r\n\r\n\r\n\r\nexport const Profile = () => {\r\n  const [isFirst, setIsFirst] = useState(true)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const userName = useSelector<AppRootStateType, string | null>(state => state.profile.userName)\r\n  const cardsCount = useSelector<AppRootStateType, number>(state => state.profile.publicCardPacksCount)\r\n  const userAvatar = useSelector<AppRootStateType, string>(state => state.profile.avatar)\r\n  const isInitialized = useSelector<AppRootStateType, boolean>(state => state.profile.isInitialized)\r\n  const initializeError = useSelector<AppRootStateType, null | string>(state => state.profile.error)\r\n  const logoutError = useSelector<AppRootStateType, null | string>(state => state.auth.loginError)\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const dispatch = useDispatch();\r\n  let timerId: any;\r\n\r\n  useEffect(() => {\r\n    if (!userName) {\r\n      dispatch(initializeProfile())\r\n    }\r\n    return function cleanup () {\r\n      clearTimeout(timerId)\r\n    }\r\n  }, [])\r\n\r\n  if (appStatus === 'loading') {\r\n    return <Preloader/>\r\n  }\r\n\r\n  if (!isFirst) {\r\n    dispatch(setProfileError(null))\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  if (initializeError) {\r\n    timerId = setTimeout(() => {\r\n      setIsFirst(false)\r\n    }, 2000)\r\n  }\r\n\r\n  if (isInitialized && !isLoggedIn) {\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  return <div className={s.profile}>\r\n    {userName &&\r\n    <div className={s.userProfile}>\r\n      {!userAvatar && <div className={s.avatar}><img src={defaultAvatar} alt={userName}/></div>}\r\n      <div className={s.data}>\r\n        <div className={s.dataRow}>Name: <span>{userName}</span></div>\r\n        <div className={s.dataRow}>Count of Cards: <span>{cardsCount}</span></div>\r\n      </div>\r\n      {/*<div>*/}\r\n      {/*  <button onClick={logoutHandler}>Log Out</button>*/}\r\n      {/*</div>*/}\r\n    </div>}\r\n    {initializeError && <div className={s.initializedError}>{initializeError}</div>}\r\n    {logoutError && <div className={s.error}>{logoutError}</div>}\r\n\r\n  </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Progect_proger\\Friday_progect\\test\\Cards_ReactTS\\src\\features\\f6-error404\\Error404.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":5,"column":7,"nodeType":"80","messageId":"81","endLine":5,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":2,"column":34,"nodeType":"80","messageId":"81","endLine":2,"endColumn":43},{"ruleId":"78","severity":1,"message":"83","line":3,"column":9,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":20,"column":5,"nodeType":"86","endLine":20,"endColumn":16,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":7,"nodeType":"80","messageId":"81","endLine":4,"endColumn":20},{"ruleId":"78","severity":1,"message":"88","line":3,"column":21,"nodeType":"80","messageId":"81","endLine":3,"endColumn":29},{"ruleId":"78","severity":1,"message":"89","line":8,"column":9,"nodeType":"80","messageId":"81","endLine":8,"endColumn":18},{"ruleId":"78","severity":1,"message":"90","line":11,"column":9,"nodeType":"80","messageId":"81","endLine":11,"endColumn":22},{"ruleId":"78","severity":1,"message":"91","line":6,"column":9,"nodeType":"80","messageId":"81","endLine":6,"endColumn":15},{"ruleId":"84","severity":1,"message":"92","line":35,"column":6,"nodeType":"86","endLine":35,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"@typescript-eslint/no-unused-vars","'baseHerokuURL' is assigned a value but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'CardsType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'Redirect' is defined but never used.","'Preloader' is defined but never used.","'isInitialized' is assigned a value but never used.","'logout' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'timerId', and 'userName'. Either include them or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [dispatch, pageCount]",{"range":"102","text":"103"},"Update the dependencies array to be: [dispatch, timerId, userName]",{"range":"104","text":"105"},[631,642],"[dispatch, pageCount]",[1748,1750],"[dispatch, timerId, userName]"]