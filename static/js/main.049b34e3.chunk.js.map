{"version":3,"sources":["main/m2-components/Header/Header.module.css","features/f2-signUp/SingUp.module.css","features/f1-login/Login.module.css","features/f5-refreshPassword/RefreshPassword.module.css","features/f4-setPassword/SetPassword.module.css","features/f6-error404/Error404.module.css","features/f3-profile/Profile.module.css","features/f0-test/Test.tsx","main/m4-dal/loginAPI.ts","main/m3-bll/profile-reducer.ts","main/m3-bll/login-reducer.ts","features/f1-login/Login.tsx","main/m4-dal/registrationAPI.ts","main/m3-bll/app-reducer.ts","main/m3-bll/signup-reducer.ts","features/f2-signUp/SignUp.tsx","features/f3-profile/Profile.tsx","assets/404-error.jpg","features/f6-error404/Error404.tsx","main/m4-dal/refreshPassword-api.ts","main/m3-bll/refreshPassword-reducer.ts","features/f5-refreshPassword/RefreshPassword.tsx","main/m4-dal/setPassword-api.ts","main/m3-bll/setPassword-reducer.ts","features/f4-setPassword/SetPassword.tsx","main/m2-components/Routes/Routes.tsx","main/m2-components/Header/Header.tsx","main/m1-app/App.tsx","reportWebVitals.ts","main/m3-bll/test-reducer.ts","main/m3-bll/store.ts","index.tsx"],"names":["module","exports","Test","instance","axios","create","baseURL","withCredentials","loginAPI","loginData","post","then","res","data","delete","setUserName","userName","type","setIsInitializedProfile","isInitialized","setError","errorText","profileInitState","error","setIsLoggedIn","isLogged","loginInitState","isLoggedIn","Login","useState","email","setEmail","password","setPassword","rememberMe","setRememberMe","useSelector","state","login","profile","dispatch","useDispatch","useEffect","to","className","s","wrapperLogin","itemForm","placeholder","value","onChange","e","currentTarget","checked","PATH","REFRESH","onClick","a","console","log","name","response","message","SIGNUP","registrationAPI","registrationData","setAppStatus","status","initState","RegistrationInitState","isSignUp","SignUp","confirmPassword","setConfirmPassword","validateError","setValidateError","signUp","requestError","app","wrapperSingUp","pass1","trim","pass2","LOGIN","Profile","initializeError","logoutError","setTimeout","loading","Error404","error_block","error_img","src","errorImage","alt","error_text","error_header","error_paragraph","refreshPasswordAPI","from","isEmailSent","RefreshPassword","refreshPassword","emailValue","setEmailValue","wrapper","editBlock","isSent","sent","setPasswordAPI","token","resetPasswordToken","isPasswordChanged","SetPassword","useParams","passValue1","setPassValue1","passValue2","setPassValue2","isChanged","TEST","PROFILE","SET","ERROR404","Routes","path","exact","render","Header","link","activeClassName","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","testPage","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.049b34e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3rGh6\",\"active\":\"Header_active__WDb58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperSingUp\":\"SingUp_wrapperSingUp__10c9o\",\"error\":\"SingUp_error__3hVWl\",\"itemForm\":\"SingUp_itemForm__2Hoqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLogin\":\"Login_wrapperLogin__7crdy\",\"error\":\"Login_error__2KjR3\",\"itemForm\":\"Login_itemForm__2BJK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RefreshPassword_wrapper__1w0cM\",\"itemForm\":\"RefreshPassword_itemForm__211yj\",\"sent\":\"RefreshPassword_sent__3-UqR\",\"error\":\"RefreshPassword_error__1-Yf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SetPassword_wrapper__2NCAr\",\"itemForm\":\"SetPassword_itemForm__Dzarj\",\"error\":\"SetPassword_error__jBYu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_block\":\"Error404_error_block__1S9L_\",\"error_img\":\"Error404_error_img__12cse\",\"error_text\":\"Error404_error_text__2UoDX\",\"error_header\":\"Error404_error_header__1A5K1\",\"error_paragraph\":\"Error404_error_paragraph__2qgdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Profile_loading__23loj\",\"profile\":\"Profile_profile__1KS2C\",\"error\":\"Profile_error__2vXXn\"};","import React from 'react';\r\n\r\nexport const Test = () => {\r\n  return <>\r\n  Test\r\n  </>\r\n}","import axios from \"axios\";\r\nimport {LoginDataType} from '../m3-bll/login-reducer';\r\n\r\nconst instance = axios.create({\r\n\t// baseURL: \"http://localhost:7542/2.0/\",\r\n\tbaseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n\twithCredentials: true,\r\n})\r\n\r\ntype ResponseUserType = {\r\n\tcreated: string\r\n\temail: string\r\n\tisAdmin: boolean\r\n\tname: string\r\n\tpublicCardPacksCount: number\r\n\trememberMe: boolean\r\n\ttoken: string\r\n\ttokenDeathTime: string\r\n\tupdated: string\r\n\tverified: boolean\r\n\t__v: number\r\n\t_id: string\r\n}\r\n\r\n\r\nexport const loginAPI = {\r\n\tlogin(loginData: LoginDataType) {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/login\", loginData)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tme() {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/me\", {})\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete('auth/me')\r\n\t\t\t.then(res => res)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n// created: \"2021-02-07T19:05:49.207Z\"\r\n// email: \"sergdiag19@gmail.com\"\r\n// isAdmin: false\r\n// name: \"sergdiag19@gmail.com\"\r\n// publicCardPacksCount: 0\r\n// rememberMe: false\r\n// token: \"44e9b950-6af2-11eb-a3aa-43f1dde77f4b\"\r\n// tokenDeathTime: 1612898233573\r\n// updated: \"2021-02-09T16:17:13.574Z\"\r\n// verified: false\r\n// __v: 0\r\n// _id: \"60203a0d5c268c2adcce842a\"","// A c t i o n s\r\nimport {Dispatch} from 'redux';\r\nimport {LoginActionsType, setIsLoggedIn} from './login-reducer';\r\nimport {loginAPI} from '../m4-dal/loginAPI';\r\nimport {AppActionsType} from './app-reducer';\r\n\r\nexport const setUserName = (userName: string | null) => ({\r\n  type: 'cards/profile/SET-USER-NAME', userName\r\n} as const)\r\nexport const setIsInitializedProfile = (isInitialized: boolean) => ({\r\n  type: 'cards/app/SET-IS-INITIALIZED', isInitialized\r\n} as const)\r\nexport const setError = (errorText: string | null) => ({\r\n  type: 'cards/app/SET-ERROR', errorText\r\n} as const)\r\nexport type ProfileActionsTypes = ReturnType<typeof setUserName>\r\n  | ReturnType<typeof setIsInitializedProfile>\r\n  | ReturnType<typeof setError>\r\n\r\n// S t a t e\r\nconst profileInitState = {\r\n  userName: null as string | null,\r\n  isInitialized: false,\r\n  error: null as string | null\r\n}\r\nexport type ProfileStateType = typeof profileInitState\r\n\r\n// R d u c e r\r\nexport const profileReducer = (state: ProfileStateType = profileInitState, action: ProfileActionsTypes): ProfileStateType => {\r\n  switch (action.type) {\r\n    case 'cards/profile/SET-USER-NAME':\r\n      return {\r\n        ...state,\r\n        userName: action.userName\r\n      }\r\n    case 'cards/app/SET-IS-INITIALIZED':\r\n      return {\r\n        ...state,\r\n        isInitialized: action.isInitialized\r\n      }\r\n    case 'cards/app/SET-ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.errorText\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\n\r\n// T h u n k\r\nexport const initializeProfile = () => {\r\n  return async (dispatch: Dispatch<AppActionsType | ProfileActionsTypes | LoginActionsType>) => {\r\n    try {\r\n      const data = await loginAPI.me()\r\n      dispatch(setUserName(data.name))\r\n      dispatch(setIsLoggedIn(true))\r\n      dispatch(setIsInitializedProfile(true))\r\n\r\n    } catch (error) {\r\n      dispatch((setError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred')))\r\n      await setTimeout(() => dispatch(setIsInitializedProfile(true)), 2000)\r\n    }\r\n  }\r\n}\r\n\r\n","import {loginAPI} from '../m4-dal/loginAPI';\r\nimport {Dispatch} from 'redux';\r\nimport {ProfileActionsTypes, setIsInitializedProfile, setUserName} from './profile-reducer';\r\n\r\n// A c t i o n s\r\nexport const setIsLoggedIn = (isLogged: boolean) => ({\r\n  type: 'cards/login/SET-IS-LOGGED-IN', isLogged\r\n} as const)\r\nexport const setError = (errorText: string | null) => ({\r\n  type: 'cards/login/SET-ERROR', errorText\r\n} as const)\r\nexport type LoginActionsType = ReturnType<typeof setIsLoggedIn>\r\n  | ReturnType<typeof setError>\r\n\r\n\r\n// S t a t e\r\nconst loginInitState = {\r\n  isLoggedIn: false,\r\n  error: null as string | null,\r\n}\r\nexport type LoginStateType = typeof loginInitState\r\n\r\n\r\n// T h u n k\r\nexport type LoginDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\nexport const loginMe = (loginData: LoginDataType) => {\r\n  return async (dispatch: Dispatch<LoginActionsType | ProfileActionsTypes>) => {\r\n    try {\r\n      const data = await loginAPI.login(loginData)\r\n      console.log(data)\r\n      dispatch(setIsLoggedIn(true))\r\n      dispatch(setUserName(data.name))\r\n    } catch (error) {\r\n      dispatch(setError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n    }\r\n  }\r\n}\r\nexport const logout = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const data = await loginAPI.logout()\r\n      dispatch(setIsLoggedIn(false))\r\n      dispatch(setIsInitializedProfile(false))\r\n      dispatch(setUserName(null))\r\n      console.log(data)\r\n    } catch (error) {\r\n      dispatch(setError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n    }\r\n  }\r\n}\r\n\r\n// R e d u c e r\r\nexport const loginReducer = (state: LoginStateType = loginInitState, action: LoginActionsType): LoginStateType => {\r\n  switch (action.type) {\r\n    case 'cards/login/SET-ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.errorText\r\n      }\r\n    case 'cards/login/SET-IS-LOGGED-IN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLogged\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {loginMe} from '../../main/m3-bll/login-reducer';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport s from './Login.module.css'\r\nimport {setError, setIsInitializedProfile} from '../../main/m3-bll/profile-reducer';\r\n\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState('abcabc@grr.la')\r\n  const [password, setPassword] = useState('8888888888')\r\n  const [rememberMe, setRememberMe] = useState(false)\r\n\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n  const isInitialized = useSelector<AppRootStateType, boolean>(state => state.profile.isInitialized)\r\n  const userName = useSelector<AppRootStateType, string | null>(state => state.profile.userName)\r\n  const error = useSelector<AppRootStateType, string | null>(state => state.login.error)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!userName) {\r\n      dispatch(setIsInitializedProfile(false))\r\n      dispatch(setError(null))\r\n    }\r\n  }, [])\r\n\r\n  const changeEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value)\r\n  }\r\n  const changePasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const changeRememberMeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRememberMe(e.currentTarget.checked)\r\n  }\r\n  const onSubmit = () => {\r\n    dispatch(loginMe({email, password, rememberMe}))\r\n    dispatch(setError(null))\r\n  }\r\n\r\n  if (isLoggedIn && !isInitialized) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div className={s.wrapperLogin}>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'email'} value={email} onChange={changeEmailHandler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'password'} value={password} onChange={changePasswordHandler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <input type=\"checkbox\" checked={rememberMe}\r\n               onChange={changeRememberMeHandler}/><span>RememberMe</span>\r\n      </div>\r\n      {error && <div className={s.error}>{error}</div>}\r\n      <div>\r\n      <NavLink to={PATH.REFRESH}>Forget password?</NavLink>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n      <button onClick={onSubmit}>Log In</button>\r\n      </div>\r\n      <div>\r\n      <NavLink to={PATH.SIGNUP}>Sign Up</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from \"axios\";\r\nimport {RegDataType} from '../m3-bll/signup-reducer';\r\n\r\nconst instance = axios.create({\r\n\t// baseURL: \"http://localhost:7542/2.0/\",\r\n\tbaseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n})\r\n\r\nexport const registrationAPI = {\r\n\tregistrationMe(registrationData: RegDataType) {\r\n\t\treturn instance.post(\"/auth/register\", registrationData)\r\n\t\t\t.then(res => res)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// type responseData<T> = {\r\n// \taddedUser: {}\r\n// \terror: T\r\n// }\r\n// {\"error\":\"not valid email/password /ᐠ-ꞈ-ᐟ\\\\\",\r\n// \t\"in\":\"createUser\",\r\n// \t\"isEmailValid\":true,\r\n// \t\"isPassValid\":false,\r\n// \t\"emailRegExp\":{},\r\n// \t\"passwordRegExp\":\"Password must be more than 7 characters...\"\r\n//}\r\n\r\n// {\"error\":\"email already exists /ᐠ｡ꞈ｡ᐟ\\\\\",\r\n// \t\"email\":\"sergdiag19@gmail.com\",\"in\":\"createUser\"\r\n// }\r\n\r\n// {\"addedUser\":\r\n// \t{\"_id\":\"60204ac65c268c2adcce842e\"\r\n// \t\t,\"email\":\"123412312412@mail.ru\",\r\n// \t\t\"rememberMe\":false,\r\n// \t\t\"isAdmin\":false,\r\n// \t\t\"name\":\"123412312412@mail.ru\",\r\n// \t\t\"verified\":false,\r\n// \t\t\"publicCardPacksCount\":0,\r\n// \t\t\"created\":\"2021-02-07T20:17:10.756Z\",\r\n// \t\t\"updated\":\"2021-02-07T20:17:10.756Z\",\r\n// \t\t\"__v\":0\r\n// \t}\r\n// }\r\n\r\n// config: {url: \"/auth/register\", method: \"post\", data: \"{\"email\":\"sergdiag1@gmail.com\",\"password\":\"11111111\"}\", headers: {…}, baseURL: \"http://localhost:7542/2.0/\", …}\r\n// data:\r\n// \taddedUser: {_id: \"60203eae5c268c2adcce842b\", email: \"sergdiag1@gmail.com\", rememberMe: false, isAdmin: false, name: \"sergdiag1@gmail.com\", …}\r\n// __proto__: Object\r\n// headers: {content-length: \"266\", content-type: \"application/json; charset=utf-8\"}\r\n// request: XMLHttpRequest {readyState: 4, timeout: 0, withCredentials: false, upload: XMLHttpRequestUpload, onreadystatechange: ƒ, …}\r\n// status: 201\r\n// statusText: \"Created\"","// A c t i o n s\r\nexport const setAppStatus = (status: RequestStatusType) => ({\r\n  type: 'cards/app/SET-STATUS', status\r\n} as const)\r\nexport type AppActionsType = ReturnType<typeof setAppStatus>\r\n\r\n\r\n// S t a t e\r\nconst initState: AppInitStateType = {\r\n  status: 'idle'\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppInitStateType = {\r\n  status: RequestStatusType\r\n\r\n}\r\n\r\n// R e d u c e r\r\nexport const appReducer = (state: AppInitStateType = initState, action: AppActionsType): AppInitStateType => {\r\n  switch (action.type) {\r\n    case 'cards/app/SET-STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n","import {registrationAPI} from '../m4-dal/registrationAPI';\r\nimport {AppActionsType, setAppStatus,} from './app-reducer';\r\nimport {Dispatch} from 'redux';\r\n\r\n// A c t i o n s\r\nexport const setIsSignUp = (isSignUp: boolean) => ({\r\n  type: 'cards/signUp/SET-IS-SIGN-UP', isSignUp\r\n} as const)\r\nexport const setError = (errorText: string | null) => ({\r\n  type: 'cards/signUp/SET-ERROR', errorText\r\n} as const)\r\nexport type SignUpActionType = ReturnType<typeof setIsSignUp>\r\n  | ReturnType<typeof setError>\r\n\r\n// S t a t e\r\nconst RegistrationInitState = {\r\n  isSignUp: false,\r\n  error: null as string | null\r\n}\r\nexport type RegistrationStateType = typeof RegistrationInitState\r\n\r\n\r\n// T h u n k\r\nexport type RegDataType = {\r\n  email: string\r\n  password: string\r\n}\r\nexport const signUp = (registrationData: RegDataType) => {\r\n  return async (dispatch: Dispatch<SignUpActionType | AppActionsType>) => {\r\n    try {\r\n      dispatch(setAppStatus('loading'))\r\n      const data = await registrationAPI.registrationMe(registrationData)\r\n      dispatch(setIsSignUp(true))\r\n      console.log(data)\r\n    } catch (error) {\r\n      dispatch(setError(error.response ? error.response.data.error\r\n\t\t\t\t: error.message ? error.message\r\n\t\t\t\t\t: 'Some error occurred'))\r\n    } finally {\r\n      dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\n\r\n// R e d u c e r\r\nexport const signupReducer = (state: RegistrationStateType = RegistrationInitState, action: SignUpActionType): RegistrationStateType => {\r\n  switch (action.type) {\r\n    case 'cards/signUp/SET-IS-SIGN-UP': {\r\n      return {\r\n        ...state,\r\n        isSignUp: action.isSignUp\r\n      }\r\n    }\r\n    case 'cards/signUp/SET-ERROR': {\r\n      return {\r\n        ...state,\r\n        error: action.errorText\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport s from './SingUp.module.css'\r\nimport {setError, signUp} from '../../main/m3-bll/signup-reducer';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\n\r\nexport const SignUp = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [validateError, setValidateError] = useState('')\r\n\r\n  const isSignUp = useSelector<AppRootStateType, boolean>(state => state.signUp.isSignUp)\r\n  const requestError = useSelector<AppRootStateType,string | null>(state => state.signUp.error)\r\n  const status = useSelector<AppRootStateType, string>(state => state.app.status)\r\n  const dispatch = useDispatch()\r\n\r\n  const changeEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value)\r\n  }\r\n  const changePasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const confirmPasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.currentTarget.value)\r\n  }\r\n  const onSubmit = () => {\r\n    const pass1 = password.trim()\r\n    const pass2 = confirmPassword.trim()\r\n    if (pass1 !== pass2) {\r\n      setValidateError('The password values must be equal to!')\r\n      return\r\n    }\r\n    if (pass1 === pass2) {\r\n      dispatch(signUp({email, password}))\r\n      setValidateError('')\r\n      dispatch(setError(null))\r\n    }\r\n  }\r\n\r\n  if (isSignUp) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  return <div className={s.wrapperSingUp}>\r\n    {status === 'loading' && <div>Please wait...</div>}\r\n    <div className={s.itemForm}>\r\n      <input type=\"text\" placeholder={'email'} value={email} onChange={changeEmailHandler}/>\r\n    </div>\r\n    <div className={s.itemForm}>\r\n      <input type=\"text\" placeholder={'password'} value={password} onChange={changePasswordHandler}/>\r\n    </div>\r\n    <div className={s.itemForm}>\r\n      <input type=\"text\" placeholder={'Confirm password'} value={confirmPassword} onChange={confirmPasswordHandler}/>\r\n    </div>\r\n    {validateError && <div className={s.error}>{validateError}</div>}\r\n    {requestError && <div className={s.error}>{requestError}</div>}\r\n    <div className={s.itemForm}>\r\n      <button onClick={onSubmit}>Sing Up</button>\r\n    </div>\r\n    <div>\r\n      <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n    </div>\r\n  </div>\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from './Profile.module.css'\r\nimport {logout} from '../../main/m3-bll/login-reducer';\r\nimport {initializeProfile} from '../../main/m3-bll/profile-reducer';\r\n\r\nexport const Profile = () => {\r\n  const userName = useSelector<AppRootStateType, string | null>(state => state.profile.userName)\r\n  const isInitialized = useSelector<AppRootStateType, boolean>(state => state.profile.isInitialized)\r\n  const initializeError = useSelector<AppRootStateType, null | string>(state => state.profile.error)\r\n  const logoutError = useSelector<AppRootStateType, null | string>(state => state.login.error)\r\n  // const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userName) {\r\n      dispatch(initializeProfile())\r\n    }\r\n  }, [])\r\n\r\n\r\n  if (isInitialized && !isLoggedIn) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  if (!isInitialized && !isLoggedIn) {\r\n    return <div className={s.loading}>\r\n      <div>Initializing...</div>\r\n      <div className={s.error}>{initializeError}</div>\r\n    </div>\r\n  }\r\n\r\n  return <div className={s.profile}>\r\n    {userName && <div>Hello, <span>{userName}</span></div>}\r\n    <div className={s.error}>{logoutError}</div>\r\n    <div>\r\n      <button onClick={logoutHandler}>Log Out</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/404-error.8c0adfd2.jpg\";","import React from 'react';\r\nimport s from './Error404.module.css'\r\nimport errorImage from './../../assets/404-error.jpg'\r\n\r\nexport const Error404 = () => {\r\n  return <div className={s.error_block}>\r\n    <img className={s.error_img} src={errorImage} alt=\"404\"/>\r\n    <div className={s.error_text}>\r\n      <div className={s.error_header}>OOOPS! PAGE NOT FOUND...</div>\r\n      <p className={s.error_paragraph}>You must have picked the wrong door because I haven't been able to\r\n        lay my eye on the page you've been searching for.</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import axios from 'axios'\r\n\r\nconst baseLocalhostURL = 'http://localhost:7542/2.0/'\r\nconst baseHerokuURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nconst instance = axios.create({\r\n  baseURL: baseHerokuURL,\r\n})\r\n\r\nexport const refreshPasswordAPI = {\r\n  refresh(email: string) {\r\n    return instance.post('auth/forgot', {\r\n      email: email,\r\n      from: 'test-front-admin <ai73a@yandex.by>',\r\n      message: '<div style=\\'background-color: lime; padding: 15px\\'>' +\r\n        ' password recovery link:' +\r\n        ' <a href=\\'https://daria0109.github.io/Cards_ReactTS/#/set/$token$\\'> link</a></div>'\r\n    }).then(res => res)\r\n  }\r\n}","import {Dispatch} from 'redux'\r\nimport {refreshPasswordAPI} from '../m4-dal/refreshPassword-api';\r\n\r\n// A c t i o n s\r\nexport const setIsEmailSent = (isSent: boolean) => ({\r\n  type: 'cards/refreshPassword/SET-IS-EMAIL-SENT', isSent\r\n} as const)\r\nexport const setError = (errorText: string | null) => ({\r\n  type: 'cards/refreshPassword/SET-ERROR', errorText\r\n} as const)\r\nexport type RefreshPasswordActionsType = ReturnType<typeof setIsEmailSent>\r\n  | ReturnType<typeof setError>\r\n\r\n// S t a t e\r\nconst initState = {\r\n  isEmailSent: false,\r\n  error: null as string | null\r\n}\r\nexport type RefreshPasswordStateType = typeof initState\r\n\r\n// R e d u c e r\r\nexport const refreshPasswordReducer = (state: RefreshPasswordStateType = initState, action: RefreshPasswordActionsType): RefreshPasswordStateType => {\r\n  switch (action.type) {\r\n    case 'cards/refreshPassword/SET-IS-EMAIL-SENT':\r\n      return {\r\n        ...state,\r\n        isEmailSent: action.isSent\r\n      }\r\n    case 'cards/refreshPassword/SET-ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.errorText\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// T h u n k\r\nexport const sendEmail = (email: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const data = await refreshPasswordAPI.refresh(email)\r\n      dispatch(setIsEmailSent(true))\r\n      console.log(data.data)\r\n    } catch (error) {\r\n      dispatch(setError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log(error.response.data.error)\r\n      console.log(error.message)\r\n    }\r\n  }\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {sendEmail, setError} from '../../main/m3-bll/refreshPassword-reducer';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport s from './RefreshPassword.module.css'\r\n\r\nexport const RefreshPassword = () => {\r\n  const isEmailSent = useSelector<AppRootStateType, boolean>(state => state.refreshPassword.isEmailSent)\r\n  const error = useSelector<AppRootStateType, string | null>(state => state.refreshPassword.error)\r\n  const dispatch = useDispatch();\r\n\r\n  const [emailValue, setEmailValue] = useState('')\r\n\r\n  const changeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmailValue(e.currentTarget.value)\r\n  }\r\n  const sendEmailHandler = () => {\r\n    dispatch(sendEmail(emailValue))\r\n    dispatch(setError(null))\r\n  }\r\n\r\n  return <div className={s.wrapper}>\r\n    {!isEmailSent &&\r\n    <div className={s.editBlock}>\r\n      <div className={s.itemForm}>\r\n        <input placeholder='Enter email...' value={emailValue} onChange={changeEmailHandler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <button onClick={sendEmailHandler}>Send</button>\r\n      </div>\r\n    </div>}\r\n\r\n    {isEmailSent &&\r\n    <div className={s.sent}>\r\n      <p>Success!</p>\r\n      <p>The link was sent to your email!</p>\r\n    </div>}\r\n\r\n    {error &&\r\n    <div className={s.error}>{error}</div>}\r\n\r\n    <div>\r\n    <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n    </div>\r\n  </div>\r\n}","import axios from 'axios'\r\n\r\nconst baseLocalhostURL = 'http://localhost:7542/2.0/'\r\nconst baseHerokuURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nconst instance = axios.create({\r\n  baseURL: baseHerokuURL,\r\n})\r\n\r\nexport const setPasswordAPI = {\r\n  setPassword(password: string, token: string) {\r\n    return instance.post('auth/set-new-password', {\r\n      password,\r\n      resetPasswordToken: token\r\n      }).then(res => res)\r\n  }\r\n}","import {Dispatch} from 'redux';\r\nimport {setPasswordAPI} from '../m4-dal/setPassword-api';\r\n\r\n// A c t i o n s\r\nexport const setIsPasswordChanged = (isChanged: boolean) => ({\r\n  type: 'cards/setPassword/SET-IS-PASSWORD-CHANGED', isChanged\r\n} as const)\r\nexport const setError = (errorText: string | null) => ({\r\n  type: 'cards/error/SET-ERROR', errorText\r\n} as const)\r\nexport type SetPasswordActionsTypes = ReturnType<typeof setIsPasswordChanged>\r\n  | ReturnType<typeof setError>\r\n\r\n// S t a t e\r\nconst initState = {\r\n  isPasswordChanged: false,\r\n  error: null as string | null\r\n}\r\nexport type SetPasswordStateType = typeof initState\r\n\r\n// R e d u s e r\r\nexport const setPasswordReducer = (state: SetPasswordStateType = initState, action: SetPasswordActionsTypes): SetPasswordStateType => {\r\n  switch (action.type) {\r\n    case 'cards/setPassword/SET-IS-PASSWORD-CHANGED':\r\n      return {\r\n        ...state,\r\n        isPasswordChanged: action.isChanged\r\n      }\r\n    case 'cards/error/SET-ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.errorText\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// T h u n k\r\nexport const setPassword = (password: string, token: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const data = await setPasswordAPI.setPassword(password, token)\r\n      dispatch(setIsPasswordChanged(true))\r\n      console.log(data)\r\n    } catch(error) {\r\n      dispatch(setError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log(error.response.data.error)\r\n      console.log(error.message)\r\n    }\r\n  }\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setError, setPassword} from '../../main/m3-bll/setPassword-reducer';\r\nimport s from './SetPassword.module.css'\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\n\r\ntype ParamsType = {\r\n  token?: string | undefined\r\n}\r\n\r\nexport const SetPassword = () => {\r\n  const isPasswordChanged = useSelector<AppRootStateType, boolean>(state => state.setPassword.isPasswordChanged)\r\n  const requestError = useSelector<AppRootStateType, string | null>(state => state.setPassword.error)\r\n  const dispatch = useDispatch();\r\n\r\n  const {token} = useParams<ParamsType>()\r\n\r\n  const [passValue1, setPassValue1] = useState('')\r\n  const [passValue2, setPassValue2] = useState('')\r\n  const [validateError, setValidateError] = useState('')\r\n\r\n  const changePass1Handler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassValue1(e.currentTarget.value)\r\n  }\r\n  const changePass2Handler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassValue2(e.currentTarget.value)\r\n  }\r\n  const setPassHandler = () => {\r\n    const pass1 = passValue1.trim()\r\n    const pass2 = passValue2.trim()\r\n    if (!pass1 && !pass2 ) {\r\n      setValidateError('Password is required')\r\n      return\r\n    }\r\n    if (pass1 !== pass2) {\r\n      setValidateError('The password values must be equal to!')\r\n      return\r\n    }\r\n    if (!token) {\r\n      setValidateError('Send your email on Refresh Page!')\r\n      return\r\n    }\r\n    if (token && pass1 === pass2) {\r\n      dispatch(setPassword(pass1, token))\r\n      setValidateError('')\r\n      dispatch(setError(null))\r\n    }\r\n  }\r\n\r\n  if (isPasswordChanged) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  return <div className={s.wrapper}>\r\n    <div className={s.itemForm}>\r\n      <input placeholder='New password...' value={passValue1} onChange={changePass1Handler}/>\r\n    </div>\r\n    <div className={s.itemForm}>\r\n      <input placeholder='Confirm password...' value={passValue2} onChange={changePass2Handler}/>\r\n    </div>\r\n\r\n    {validateError &&\r\n    <div className={s.error}>\r\n      {validateError}\r\n    </div>}\r\n\r\n    {requestError &&\r\n    <div className={s.error}>\r\n      {requestError}\r\n    </div>}\r\n\r\n    <div className={s.itemForm}>\r\n      <button onClick={setPassHandler}>Set new Password</button>\r\n    </div>\r\n  </div>\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch, useParams} from 'react-router-dom';\r\nimport {Test} from '../../../features/f0-test/Test';\r\nimport {Login} from '../../../features/f1-login/Login';\r\nimport {SignUp} from '../../../features/f2-signUp/SignUp';\r\nimport {Profile} from '../../../features/f3-profile/Profile';\r\nimport {Error404} from '../../../features/f6-error404/Error404';\r\nimport {RefreshPassword} from '../../../features/f5-refreshPassword/RefreshPassword';\r\nimport {SetPassword} from '../../../features/f4-setPassword/SetPassword';\r\n\r\nexport const PATH = {\r\n  TEST: '/test',\r\n  LOGIN: '/login',\r\n  SIGNUP: '/signup',\r\n  PROFILE: '/profile',\r\n  REFRESH: '/refresh',\r\n  SET: '/set/:token',\r\n  ERROR404: '/404'\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n\r\n  return <div>\r\n      <Switch>\r\n        <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n        <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n        <Route path={PATH.TEST} render={() => <Test/>}/>\r\n        <Route path={PATH.SIGNUP} render={() => <SignUp/>}/>\r\n        <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n        <Route path={PATH.REFRESH} render={() => <RefreshPassword/>}/>\r\n        <Route path={'/set'} exact render={() => <SetPassword/>}/>\r\n        <Route path={PATH.SET} render={() => <SetPassword/>}/>\r\n        <Route path={PATH.ERROR404} render={() => <Error404/>}/>\r\n\r\n        <Route render={() => <Redirect to={PATH.ERROR404}/>}/>\r\n      </Switch>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {PATH} from '../Routes/Routes';\r\nimport s from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n  return <>\r\n    <NavLink to={PATH.TEST} className={s.link} activeClassName={s.active}>Test Page</NavLink>\r\n    <NavLink to={PATH.PROFILE} className={s.link} activeClassName={s.active}>Profile</NavLink>\r\n    <NavLink to={PATH.LOGIN} className={s.link} activeClassName={s.active}>Login</NavLink>\r\n    <NavLink to={PATH.SIGNUP} className={s.link} activeClassName={s.active}>Sign Up</NavLink>\r\n    <NavLink to={PATH.REFRESH} className={s.link} activeClassName={s.active}>Refresh password</NavLink>\r\n    <NavLink to={'/set'} className={s.link} activeClassName={s.active}>Set password</NavLink>\r\n  </>\r\n}","import React from 'react';\nimport {Header } from '../m2-components/Header/Header';\nimport './App.css';\nimport {HashRouter} from 'react-router-dom';\nimport {Routes} from '../m2-components/Routes/Routes';\n\nexport const App = () => {\n  return <div className=\"App\">\n    <HashRouter>\n      <Header/>\n      <Routes/>\n    </HashRouter>\n    </div>\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const action = {type: 'SOME-ACTION'}\r\nexport type ActionTypes = typeof action\r\n\r\nconst initState = {}\r\nexport type StateType = typeof initState\r\n\r\nexport const testReducer = (state: StateType = initState, action: ActionTypes): StateType => {\r\n  return state\r\n}\r\n","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport {loginReducer} from './login-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {testReducer} from './test-reducer';\r\nimport {signupReducer} from './signup-reducer';\r\nimport {setPasswordReducer} from './setPassword-reducer';\r\nimport {refreshPasswordReducer} from './refreshPassword-reducer';\r\nimport thunk from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  testPage: testReducer,\r\n  login: loginReducer,\r\n  profile: profileReducer,\r\n  signUp: signupReducer,\r\n  setPassword: setPasswordReducer,\r\n  refreshPassword: refreshPasswordReducer,\r\n  app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport {App} from './main/m1-app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './main/m3-bll/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}