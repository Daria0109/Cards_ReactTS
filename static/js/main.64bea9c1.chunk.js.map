{"version":3,"sources":["features/f8-learn/LearnCards.module.css","features/f6-packs/Packs.module.css","features/f3-profile/Profile.module.css","features/f6-packs/PacksTableRow/PacksTableRow.module.css","main/m2-components/Header/Header.module.css","features/f1-login/Login.module.css","features/f7-cards/Cards.module.css","features/f2-signUp/SingUp.module.css","features/f4-setPassword/SetPassword.module.css","main/m2-components/Sort/Sort.module.css","features/f7-cards/CardsTabelRow/CardsTableRow.module.css","features/f5-refreshPassword/RefreshPassword.module.css","main/m2-components/Paginator/Paginator.module.css","main/m2-components/Modals/ModalAdd/ModalAdd.module.css","main/m2-components/Modals/ModalUpdate/ModalUpdate.module.css","features/f9-error404/Error404.module.css","main/m2-components/Modals/ModalDelete/ModalDelete.module.css","main/m2-components/AlertSnackBar/AlertSnackBar.module.css","main/m2-components/PageSizeSelector/PageSizeSelector.module.css","main/m2-components/Preloader/Preloader.module.css","main/m2-components/Modals/Modal/Modal.module.css","main/m2-components/SearchForm/SearchForm.module.css","features/f0-test/Test.tsx","main/m4-dal/authAPI.ts","main/m3-bll/app-reducer.ts","main/m3-bll/profile-reducer.ts","main/m3-bll/auth-reducer.ts","features/f1-login/Login.tsx","features/f2-signUp/SignUp.tsx","main/m2-components/Preloader/Preloader.tsx","assets/default-avatar2.jpg","assets/edit.svg","assets/save.svg","features/f3-profile/Profile.tsx","assets/404-error.jpg","features/f9-error404/Error404.tsx","features/f5-refreshPassword/RefreshPassword.tsx","features/f4-setPassword/SetPassword.tsx","main/m4-dal/packs-cards-API.ts","main/m3-bll/packs-reducer.ts","main/m2-components/Paginator/Paginator.tsx","main/m2-components/PageSizeSelector/PageSizeSelector.tsx","assets/delete.svg","features/f6-packs/PacksTableRow/PacksTableRow.tsx","main/m2-components/SearchForm/SearchForm.tsx","main/m2-components/Sort/Sort.tsx","main/m2-components/Modals/Modal/Modal.tsx","main/m2-components/Modals/ModalDelete/ModalDelete.tsx","main/m2-components/Modals/ModalAdd/ModalAdd.tsx","main/m2-components/Modals/ModalUpdate/ModalUpdate.tsx","main/m2-components/Modals/MadalsContainer.tsx","features/f6-packs/Packs.tsx","main/m3-bll/cards-reducer.ts","features/f7-cards/CardsTabelRow/CardsTabelRow.tsx","features/f7-cards/Cards.tsx","main/m3-bll/learning-reducer.ts","features/f8-learn/LearnCards.tsx","main/m2-components/Routes/Routes.tsx","main/m2-components/Header/Header.tsx","main/m2-components/AlertSnackBar/AlertSnackBar.tsx","main/m1-app/App.tsx","reportWebVitals.ts","main/m3-bll/test-reducer.ts","main/m3-bll/store.ts","index.tsx"],"names":["module","exports","Test","instance","axios","create","baseURL","withCredentials","authAPI","registrationData","post","then","res","data","loginData","delete","email","from","message","password","token","resetPasswordToken","name","put","appActions","status","type","errorText","initState","requestError","setUserData","userName","cardsCount","userId","profileInitState","publicCardPacksCount","avatar","authActions","isInitialized","isLogged","isSignUp","isSent","isChanged","authInitState","isLoggedIn","isEmailSent","isPasswordChanged","initializeUser","dispatch","a","_id","console","log","response","error","Login","useState","setEmail","setPassword","rememberMe","setRememberMe","useSelector","state","auth","appStatus","app","useDispatch","to","PATH","PROFILE","className","s","formPage","container","title","itemForm","placeholder","value","onChange","e","currentTarget","itemFormCheck","id","checked","htmlFor","forgot","REFRESH","link","button","onClick","disabled","SIGNUP","overflow","SignUp","confirmPassword","setConfirmPassword","validateError","setValidateError","LOGIN","pass1","trim","pass2","Preloader","preloaderPage","preloader","Profile","profileData","profile","nameValue","setNameValue","editMode","setEditMode","useEffect","profilePage","userProfile","editBtn","updatedUser","src","saveIcon","alt","width","height","editIcon","defaultAvatar","dataRow","editInput","info","Error404","error_block","error_img","errorImage","error_text","error_header","error_paragraph","RefreshPassword","emailValue","setEmailValue","editBlock","sent","SetPassword","useParams","passValue1","setPassValue1","passValue2","setPassValue2","packsCardsAPI","page","pageCount","packName","sortPacks","user_id","get","params","cardsPack","packId","newNamePack","cardsAPI","cardsPack_id","sortCards","cardQuestion","cardId","question","answer","card","comments","learningAPI","grade","card_id","packActions","packs","pageNumber","pageSize","packsTotalCount","isMine","sortValue","packsInitialState","cardPacks","cardPacksTotalCount","isMyPacks","searchPackName","sortPacksValue","openedPackId","fetchPacks","getState","Error","Paginator","React","memo","setActivePageNumber","totalItemsCount","Math","ceil","portionNumber","setPortionNumber","pages","i","push","leftPortionPageNumber","rightPortionPageNumber","item","filter","p","map","pageStyle","current","PageSizeSelector","setActivePageSize","ps","selector","active","PacksTableRow","pack","setModal","setPackId","openedPack","rowStyle","row","opened","setModalHandler","modal","rowItem","editRowItem","btnRowItem","iconButton","deleteIcon","titleRowItem","cardsLink","updated","slice","learnRowItem","SearchForm","searchParam","search","searchValue","setSearchValue","debouncedSearch","useCallback","debounce","nextValue","searchInput","nextSearchValue","Sort","up","down","upSort","downSort","sortSetValue","upStyle","downStyle","sort","Modal","children","setCancel","modalPage","ModalDelete","isModal","deleteItem","buttons","ModalAdd","addPack","addCard","setPackName","cardData","setCardData","input","nameInput","textarea","rows","ModalUpdate","updatePack","updateCard","newPackName","setNewPackName","newCardData","setNewCardData","ModalsContainer","Packs","totalPacksCount","setActivePacksPageSize","setActivePacksPageNumber","searchPackNameHandler","upSortHandler","downSortHandler","tableRows","packsPage","newName","updateCardsPack","deleteCardsPack","tableControls","searchForm","showMine","pageControls","table","headerTable","headerItem","headerEdit","addButton","headerTitle","headerLearn","cardsActions","cards","cardsTotalCount","cardsInitialState","searchCardQuestion","sortCardsValue","fetchCards","packID","CardsTableRow","setCardId","isOwner","rowItemStyle","rowItemGeneral","rowMainItemStyle","mainRowItem","mainRowItemGeneral","toFixed","updatedRowItem","Cards","packIdParam","every","c","headerItemStyle","headerItemGeneral","mainHeaderItemStyle","mainHeaderItem","mainHeaderItemGeneral","setActiveCardsPageSize","setActiveCardsPageNumber","searchCardQuestionHandler","cardsPage","updateCards","createCards","deleteCards","updatedHeaderItem","length","learningActions","shots","LearningInitialState","grades","getCard","sum","reduce","acc","random","newSum","LearnCards","learningCard","learning","isFirst","setIsFirst","isChecked","setIsChecked","isFlip","setIsFlip","flipCard","flip","learnPage","front","textBlock","back","titleBack","gr","buttonBack","updatedGrade","TEST","SET_TOKEN","SET","PACKS","ERROR404","Routes","path","exact","render","Header","header","menu","menuItem","activeClassName","AlertSnackBar","snackStyle","snack","timerId","setTimeout","clearTimeout","close","errorMessage","App","mainPage","mainContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","testPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64bea9c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnPage\":\"LearnCards_learnPage__GpvEp\",\"card\":\"LearnCards_card__2dv2z\",\"flip\":\"LearnCards_flip__2mOwj\",\"front\":\"LearnCards_front__g5gtv\",\"back\":\"LearnCards_back__1HDaz\",\"title\":\"LearnCards_title__3BVxy\",\"titleBack\":\"LearnCards_titleBack__2PIzs\",\"textBlock\":\"LearnCards_textBlock__2izHn\",\"question\":\"LearnCards_question__3RCzf\",\"answer\":\"LearnCards_answer__3FrNR\",\"grades\":\"LearnCards_grades__JyB06\",\"button\":\"LearnCards_button__tZ51J\",\"buttonBack\":\"LearnCards_buttonBack__2zfT2\",\"grade\":\"LearnCards_grade__9Vw7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsPage\":\"Packs_packsPage__2yQa0\",\"tableControls\":\"Packs_tableControls__1Kqo-\",\"searchForm\":\"Packs_searchForm__2LhbQ\",\"showMine\":\"Packs_showMine__2af_C\",\"pageControls\":\"Packs_pageControls__1-N5s\",\"headerTable\":\"Packs_headerTable__DEg93\",\"headerItem\":\"Packs_headerItem__3FXrx\",\"headerEdit\":\"Packs_headerEdit__2zclY\",\"headerTitle\":\"Packs_headerTitle__RMTdB\",\"headerLearn\":\"Packs_headerLearn__UEg8v\",\"addButton\":\"Packs_addButton__29erA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"Profile_profilePage__XGAZp\",\"userProfile\":\"Profile_userProfile__21n0N\",\"editBtn\":\"Profile_editBtn__2MKhR\",\"avatar\":\"Profile_avatar__3IhEK\",\"data\":\"Profile_data__1ucXc\",\"dataRow\":\"Profile_dataRow__30J5e\",\"title\":\"Profile_title__ApSOE\",\"info\":\"Profile_info__1T7ge\",\"editInput\":\"Profile_editInput__C6PKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"PacksTableRow_row__3fA3V\",\"opened\":\"PacksTableRow_opened__njwOb\",\"rowItem\":\"PacksTableRow_rowItem__2o0uj\",\"editRowItem\":\"PacksTableRow_editRowItem__19nTO\",\"titleRowItem\":\"PacksTableRow_titleRowItem__2jvx6\",\"learnRowItem\":\"PacksTableRow_learnRowItem__2cWsP\",\"btnRowItem\":\"PacksTableRow_btnRowItem__1C4uj\",\"iconButton\":\"PacksTableRow_iconButton__2nsQF\",\"cardsLink\":\"PacksTableRow_cardsLink__kyPnH\",\"button\":\"PacksTableRow_button__13v9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ZRtb\",\"menu\":\"Header_menu__11ml9\",\"menuItem\":\"Header_menuItem__20UUI\",\"link\":\"Header_link__3rGh6\",\"active\":\"Header_active__WDb58\",\"button\":\"Header_button__1IIfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPage\":\"Login_formPage__1tOJ6\",\"container\":\"Login_container__1F-1d\",\"title\":\"Login_title__3O7PR\",\"error\":\"Login_error__2KjR3\",\"itemForm\":\"Login_itemForm__2BJK2\",\"itemFormCheck\":\"Login_itemFormCheck__37_bu\",\"link\":\"Login_link__IcGXT\",\"forgot\":\"Login_forgot__4AR2m\",\"button\":\"Login_button__3v4h0\",\"overflow\":\"Login_overflow__1AJ09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsPage\":\"Cards_cardsPage__2lNTk\",\"tableControls\":\"Cards_tableControls__3ip7J\",\"pageControls\":\"Cards_pageControls__2e3-i\",\"addButton\":\"Cards_addButton__Qm4PK\",\"headerTable\":\"Cards_headerTable__1-5bS\",\"headerItem\":\"Cards_headerItem__3zPux\",\"headerItemGeneral\":\"Cards_headerItemGeneral__1iUXl\",\"mainHeaderItem\":\"Cards_mainHeaderItem__1gYf5\",\"mainHeaderItemGeneral\":\"Cards_mainHeaderItemGeneral__3cs4n\",\"updatedHeaderItem\":\"Cards_updatedHeaderItem__MqeGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPage\":\"SingUp_formPage__2peeN\",\"container\":\"SingUp_container__2fgVE\",\"title\":\"SingUp_title__1lck9\",\"error\":\"SingUp_error__3hVWl\",\"itemForm\":\"SingUp_itemForm__2Hoqs\",\"button\":\"SingUp_button__3Pf3u\",\"itemFormBtn\":\"SingUp_itemFormBtn__TtQRn\",\"link\":\"SingUp_link__sb7Vt\",\"overflow\":\"SingUp_overflow__1x0Io\",\"requestError\":\"SingUp_requestError__3gCQ1\",\"validateError\":\"SingUp_validateError__2LNoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPage\":\"SetPassword_formPage__2c-s7\",\"container\":\"SetPassword_container__2GBg9\",\"title\":\"SetPassword_title__3S83t\",\"itemForm\":\"SetPassword_itemForm__Dzarj\",\"button\":\"SetPassword_button__1ON39\",\"overflow\":\"SetPassword_overflow__2aD2C\",\"requestError\":\"SetPassword_requestError__3xger\",\"validateError\":\"SetPassword_validateError__3mkwJ\",\"link\":\"SetPassword_link__1oY3I\",\"forgot\":\"SetPassword_forgot__20Rs4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort\":\"Sort_sort__2qcOb\",\"button\":\"Sort_button__3t66Z\",\"up\":\"Sort_up__2onc8\",\"down\":\"Sort_down__2He1D\",\"active\":\"Sort_active__1p1NZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CardsTableRow_row__159zm\",\"rowItem\":\"CardsTableRow_rowItem__2zAxW\",\"rowItemGeneral\":\"CardsTableRow_rowItemGeneral__1Onvw\",\"mainRowItem\":\"CardsTableRow_mainRowItem__2Scth\",\"mainRowItemGeneral\":\"CardsTableRow_mainRowItemGeneral__2Ywil\",\"updatedRowItem\":\"CardsTableRow_updatedRowItem__3HtNn\",\"btnRowItem\":\"CardsTableRow_btnRowItem__2zeyC\",\"iconButton\":\"CardsTableRow_iconButton__2sagI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPage\":\"RefreshPassword_formPage__1SZNB\",\"container\":\"RefreshPassword_container__rfWJy\",\"title\":\"RefreshPassword_title__1S3az\",\"itemForm\":\"RefreshPassword_itemForm__211yj\",\"sent\":\"RefreshPassword_sent__3-UqR\",\"button\":\"RefreshPassword_button__2rCST\",\"link\":\"RefreshPassword_link__3CDqb\",\"overflow\":\"RefreshPassword_overflow__3UEPU\",\"requestError\":\"RefreshPassword_requestError__DFgPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Paginator_container__1P74O\",\"item\":\"Paginator_item__3WsfZ\",\"button\":\"Paginator_button__19M40\",\"page\":\"Paginator_page__1c7EU\",\"current\":\"Paginator_current__15mQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"ModalAdd_buttons__2YhVy\",\"button\":\"ModalAdd_button__2gZM_\",\"input\":\"ModalAdd_input__2CDHw\",\"nameInput\":\"ModalAdd_nameInput__JkaN4\",\"textarea\":\"ModalAdd_textarea__2G8Bc\",\"cardData\":\"ModalAdd_cardData___xVXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"ModalUpdate_buttons__3sV7U\",\"button\":\"ModalUpdate_button__3Cc5D\",\"input\":\"ModalUpdate_input__ruMPO\",\"nameInput\":\"ModalUpdate_nameInput__FrV5Y\",\"textarea\":\"ModalUpdate_textarea__2NkWI\",\"cardData\":\"ModalUpdate_cardData__1tJYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_block\":\"Error404_error_block__3Hqkv\",\"error_img\":\"Error404_error_img__uTvxS\",\"error_text\":\"Error404_error_text__3FfDh\",\"error_header\":\"Error404_error_header__MMvUd\",\"error_paragraph\":\"Error404_error_paragraph__28BCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ModalDelete_title__C5yrc\",\"buttons\":\"ModalDelete_buttons__2huxK\",\"button\":\"ModalDelete_button__1Y65F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snack\":\"AlertSnackBar_snack__1dDlY\",\"errorMessage\":\"AlertSnackBar_errorMessage__O2U6o\",\"close\":\"AlertSnackBar_close__2KTpi\",\"active\":\"AlertSnackBar_active__1d3CL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageSizeSelector_container__2dcwU\",\"selector\":\"PageSizeSelector_selector__gY-AD\",\"active\":\"PageSizeSelector_active__1Ok8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderPage\":\"Preloader_preloaderPage__3UUGJ\",\"preloader\":\"Preloader_preloader__YlrQS\",\"load4\":\"Preloader_load4__1svV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalPage\":\"Modal_modalPage__2HIX1\",\"container\":\"Modal_container__3EXsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchForm_searchInput__3Xijm\"};","import React from 'react';\r\n\r\nexport const Test = () => {\r\n  return <>\r\n  </>\r\n}","import axios from \"axios\";\r\nimport {LoginDataType, RegDataType} from '../m3-bll/auth-reducer';\r\n\r\nconst baseLocalhostURL = 'http://localhost:7542/2.0/'\r\nconst baseHerokuURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: baseHerokuURL,\r\n\twithCredentials: true,\r\n})\r\n\r\ntype ResponseUserType = {\r\n\tcreated: string\r\n\temail: string\r\n\tisAdmin: boolean\r\n\tname: string\r\n\tpublicCardPacksCount: number\r\n\trememberMe: boolean\r\n\ttoken: string\r\n\ttokenDeathTime: string\r\n\tupdated: string\r\n\tverified: boolean\r\n\t__v: number\r\n\t_id: string\r\n}\r\ntype ResponseUpdatedUserType = {\r\n\ttoken: string\r\n\ttokenDeathTime: number\r\n\tupdatedUser: ResponseUserType\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n\tsignUp(registrationData: RegDataType) {\r\n\t\treturn instance.post(\"auth/register\", registrationData)\r\n\t\t\t.then(res => res)\r\n\t},\r\n\tme() {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/me\", {})\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tlogin(loginData: LoginDataType) {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/login\", loginData)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete('auth/me')\r\n\t\t\t.then(res => res)\r\n\t},\r\n\tsendEmail(email: string) {\r\n\t\treturn instance.post('auth/forgot', {\r\n\t\t\temail: email,\r\n\t\t\tfrom: 'test-front-admin <ai73a@yandex.by>',\r\n\t\t\tmessage: '<div style=\\'background-color: lime; padding: 15px\\'>' +\r\n\t\t\t\t' password recovery link:' +\r\n\t\t\t\t' <a href=\\'https://daria0109.github.io/Cards_ReactTS/#/set/$token$\\'> link</a></div>'\r\n\t\t}).then(res => res)\r\n\t},\r\n\tsetPassword(password: string, token: string) {\r\n\t\treturn instance.post('auth/set-new-password', {\r\n\t\t\tpassword,\r\n\t\t\tresetPasswordToken: token\r\n\t\t}).then(res => res)\r\n\t},\r\n\tupdateUserName(name: string) {\r\n\t\treturn instance.put<ResponseUpdatedUserType>('auth/me', {name})\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n}\r\n","import {ActionsType} from './auth-reducer';\r\n\r\n\r\n// A c t i o n s\r\nexport const appActions = {\r\n  setAppStatus: (status: RequestStatusType) => ({\r\n    type: 'cards/app/SET-STATUS', status} as const),\r\n  setRequestError: (errorText: string | null) => ({\r\n    type: 'cards/app/SET-REQUEST-ERROR', errorText} as const)\r\n}\r\nexport type AppActionsType = ReturnType<ActionsType<typeof appActions>>\r\n\r\n\r\n// S t a t e\r\nconst initState: AppInitStateType = {\r\n  status: 'idle',\r\n  requestError: null\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppInitStateType = {\r\n  status: RequestStatusType\r\n  requestError: string | null\r\n}\r\n\r\n// R e d u c e r\r\nexport const appReducer = (state: AppInitStateType = initState, action: AppActionsType): AppInitStateType => {\r\n  switch (action.type) {\r\n    case 'cards/app/SET-STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case 'cards/app/SET-REQUEST-ERROR':\r\n      return {\r\n        ...state,\r\n        requestError: action.errorText\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n","// A c t i o n s\r\nimport { Dispatch } from \"redux\";\r\nimport {authAPI} from \"../m4-dal/authAPI\";\r\nimport {appActions} from './app-reducer';\r\n\r\nexport const setUserData = (userName: string, email: string | null, cardsCount: number | null, userId: string | null) => ({\r\n  type: 'cards/profile/SET-USER-DATA', userName, userId, cardsCount, email\r\n} as const)\r\nexport const setUserName = (userName: string) => ({\r\n  type: 'cards/profile/SET-USER-NAME', userName,\r\n} as const)\r\n\r\n\r\n\r\nexport type ProfileActionsTypes = ReturnType<typeof setUserData> | ReturnType<typeof setUserName>\r\n\r\n// S t a t e\r\nconst profileInitState = {\r\n  userName: '',\r\n  publicCardPacksCount: null as number | null,\r\n  email: null as string | null,\r\n  userId: null as string | null,\r\n  avatar: '',\r\n}\r\nexport type ProfileStateType = typeof profileInitState\r\n\r\n// R e d u c e r\r\nexport const profileReducer = (state: ProfileStateType = profileInitState, action: ProfileActionsTypes): ProfileStateType => {\r\n  switch (action.type) {\r\n    case 'cards/profile/SET-USER-DATA':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n        email: action.email,\r\n        publicCardPacksCount: action.cardsCount,\r\n        userId: action.userId\r\n      }\r\n    case \"cards/profile/SET-USER-NAME\": {\r\n      return {\r\n        ...state,\r\n        userName: action.userName\r\n      }\r\n    }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport const updateUserName = (name: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      const data = await authAPI.updateUserName(name)\r\n      dispatch(setUserName(data.updatedUser.name))\r\n      console.log(data)\r\n    } catch(error) {\r\n      dispatch((appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred')))\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {ProfileActionsTypes, setUserData} from './profile-reducer';\r\nimport {appActions, AppActionsType} from './app-reducer';\r\nimport {authAPI} from '../m4-dal/authAPI';\r\n\r\n// A c t i o n s\r\nexport const authActions = {\r\n  setIsInitialized: (isInitialized: boolean) => ({\r\n    type: 'cards/app/SET-IS-INITIALIZED', isInitialized\r\n  } as const),\r\n  setIsLoggedIn: (isLogged: boolean) => ({\r\n    type: 'cards/auth/SET-IS-LOGGED-IN', isLogged} as const),\r\n  setIsSignUp: (isSignUp: boolean) => ({\r\n    type: 'cards/auth/SET-IS-SIGN-UP', isSignUp} as const),\r\n  setIsEmailSent: (isSent: boolean) => ({\r\n    type: 'cards/auth/SET-IS-EMAIL-SENT', isSent} as const),\r\n  setIsPasswordChanged: (isChanged: boolean) => ({\r\n    type: 'cards/auth/SET-IS-PASSWORD-CHANGED', isChanged} as const),\r\n}\r\nexport type ActionsType<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type AuthActionsType = ReturnType<ActionsType<typeof authActions>>\r\n\r\n\r\n// S t a t e\r\nconst authInitState = {\r\n  isInitialized: false,\r\n  isLoggedIn: false,\r\n  isSignUp: false,\r\n  isEmailSent: false,\r\n  isPasswordChanged: false,\r\n}\r\nexport type AuthStateType = typeof authInitState\r\n\r\n\r\n// T h u n k\r\nexport const initializeUser = () => {\r\n  return async (dispatch: Dispatch<AppActionsType | ProfileActionsTypes | AuthActionsType>) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      const data = await authAPI.me()\r\n      dispatch(authActions.setIsLoggedIn(true))\r\n      dispatch(authActions.setIsInitialized(true))\r\n      dispatch(setUserData(data.name, data.email, data.publicCardPacksCount, data._id))\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n      console.log('Initialized')\r\n\r\n    } catch (error) {\r\n      dispatch((appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred')))\r\n      dispatch(appActions.setAppStatus('failed'))\r\n      console.log('NOT Initialized')\r\n\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('idle'))\r\n    }\r\n  }\r\n}\r\nexport type RegDataType = {\r\n  email: string\r\n  password: string\r\n}\r\nexport const signUp = (registrationData: RegDataType) => {\r\n  return async (dispatch: Dispatch<AuthActionsType | AppActionsType>) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      await authAPI.signUp(registrationData)\r\n      dispatch(authActions.setIsSignUp(true))\r\n      console.log('SignUn')\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('NOT SignUn')\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport type LoginDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\nexport const login = (loginData: LoginDataType) => {\r\n  return async (dispatch: Dispatch<AuthActionsType | ProfileActionsTypes | AppActionsType>) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      const data = await authAPI.login(loginData)\r\n      dispatch(setUserData(data.name, data.email, data.publicCardPacksCount, data._id))\r\n      dispatch(authActions.setIsLoggedIn(true))\r\n      console.log('LogIn')\r\n\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('NOT LogIn')\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const logout = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      // dispatch(setAppStatus('loading'))\r\n      await authAPI.logout()\r\n      dispatch(authActions.setIsLoggedIn(false))\r\n      dispatch(setUserData('', null, null, null))\r\n      console.log('LogOut')\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('NOT LogOut')\r\n\r\n    } finally {\r\n      // dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const sendEmail = (email: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      await authAPI.sendEmail(email)\r\n      dispatch(authActions.setIsEmailSent(true))\r\n      console.log('Email is sent')\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('Email is NOT sent')\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const setPassword = (password: string, token: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      await authAPI.setPassword(password, token)\r\n      dispatch(authActions.setIsPasswordChanged(true))\r\n      console.log('Password set')\r\n    } catch(error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('Password NOT set')\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\n\r\n// R e d u c e r\r\nexport const authReducer = (state: AuthStateType = authInitState, action: AuthActionsType): AuthStateType => {\r\n  switch (action.type) {\r\n    case 'cards/app/SET-IS-INITIALIZED':\r\n      return {\r\n        ...state,\r\n        isInitialized: action.isInitialized\r\n      }\r\n    case 'cards/auth/SET-IS-LOGGED-IN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLogged\r\n      }\r\n    case 'cards/auth/SET-IS-SIGN-UP': {\r\n      return {\r\n        ...state,\r\n        isSignUp: action.isSignUp\r\n      }\r\n    }\r\n    case 'cards/auth/SET-IS-EMAIL-SENT':\r\n      return {\r\n        ...state,\r\n        isEmailSent: action.isSent\r\n      }\r\n    case 'cards/auth/SET-IS-PASSWORD-CHANGED':\r\n      return {\r\n        ...state,\r\n        isPasswordChanged: action.isChanged\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {login} from '../../main/m3-bll/auth-reducer';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport s from './Login.module.css'\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\n\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState('abcabc@grr.la')\r\n  const [password, setPassword] = useState('777777777')\r\n  const [rememberMe, setRememberMe] = useState(false)\r\n\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const changeEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value)\r\n  }\r\n  const changePasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const changeRememberMeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRememberMe(e.currentTarget.checked)\r\n  }\r\n  const onSubmit = () => {\r\n    dispatch(login({email, password, rememberMe}))\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to={PATH.PROFILE}/>\r\n  }\r\n\r\n  return <div className={s.formPage}>\r\n    <div className={s.container}>\r\n      <h2 className={s.title}>Log in</h2>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'Enter email...'} value={email} onChange={changeEmailHandler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'Enter password...'} value={password} onChange={changePasswordHandler}/>\r\n      </div>\r\n      <div className={`${s.itemForm} ${s.itemFormCheck}`}>\r\n        <input id='remember' type=\"checkbox\" checked={rememberMe}\r\n               onChange={changeRememberMeHandler}/>\r\n        <label htmlFor='remember'>Remember me</label>\r\n      </div>\r\n\r\n      <div className={s.forgot}>\r\n        <NavLink to={PATH.REFRESH} className={s.link}>Forgot your password?</NavLink>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <button className={s.button} onClick={onSubmit} disabled={appStatus === 'loading'}>Submit</button>\r\n      </div>\r\n        <NavLink to={PATH.SIGNUP} className={s.link}>Sign Up</NavLink>\r\n\r\n      {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport s from './SingUp.module.css'\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {authActions, signUp} from '../../main/m3-bll/auth-reducer';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\n\r\nexport const SignUp = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [validateError, setValidateError] = useState('')\r\n\r\n  const isSignUp = useSelector<AppRootStateType, boolean>(state => state.auth.isSignUp)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const status = useSelector<AppRootStateType, string>(state => state.app.status)\r\n  const dispatch = useDispatch()\r\n\r\n  const changeEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value)\r\n  }\r\n  const changePasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValidateError('')\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const confirmPasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValidateError('')\r\n    setConfirmPassword(e.currentTarget.value)\r\n  }\r\n  const onSubmit = () => {\r\n    const pass1 = password.trim()\r\n    const pass2 = confirmPassword.trim()\r\n    if (pass1 !== pass2) {\r\n      setValidateError('The password values must be equal to!')\r\n      return\r\n    }\r\n    if (pass1 === pass2) {\r\n      dispatch(signUp({email, password}))\r\n    }\r\n  }\r\n\r\n  if (isSignUp) {\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  return <div className={s.formPage}>\r\n    <div className={s.container}>\r\n      <h2 className={s.title}>Sign Up</h2>\r\n      {status === 'loading' && <div>Please wait...</div>}\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'Enter email...'} value={email} onChange={changeEmailHandler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'Enter password...'} value={password} onChange={changePasswordHandler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'Confirm password...'} value={confirmPassword}\r\n               onChange={confirmPasswordHandler}/>\r\n      </div>\r\n      {validateError && <div className={s.validateError}>{validateError}</div>}\r\n      <div className={s.itemForm}>\r\n        <button className={s.button} onClick={onSubmit} disabled={appStatus === 'loading'}>Submit</button>\r\n      </div>\r\n      <NavLink to={PATH.LOGIN} className={s.link}>Log In</NavLink>\r\n\r\n      {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n    </div>\r\n  </div>\r\n}","import React from 'react';\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n  return <div className={s.preloaderPage}>\r\n    {/*<div className={s.preloaderWrapper}>*/}\r\n      <div className={s.preloader}>Loading...</div>\r\n    {/*</div>*/}\r\n  </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar2.a47f2183.jpg\";","export default __webpack_public_path__ + \"static/media/edit.3c70b537.svg\";","export default __webpack_public_path__ + \"static/media/save.53273fd2.svg\";","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from './Profile.module.css'\r\nimport {Preloader} from '../../main/m2-components/Preloader/Preloader';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport defaultAvatar from './../../assets/default-avatar2.jpg'\r\nimport {initializeUser} from '../../main/m3-bll/auth-reducer';\r\nimport {ProfileStateType, updateUserName} from '../../main/m3-bll/profile-reducer';\r\nimport editIcon from './../../assets/edit.svg';\r\nimport saveIcon from './../../assets/save.svg'\r\n\r\n\r\nexport const Profile = () => {\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const profileData = useSelector<AppRootStateType, ProfileStateType>(state => state.profile)\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  let userName = profileData.userName\r\n  const dispatch = useDispatch();\r\n  const [nameValue, setNameValue] = useState(userName)\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      dispatch(initializeUser())\r\n    }\r\n  }, [isLoggedIn])\r\n\r\n  const onEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const saveEditedProfile = () => {\r\n    setEditMode(false)\r\n    dispatch(updateUserName(nameValue))\r\n  }\r\n  const changeNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNameValue(e.currentTarget.value)\r\n  }\r\n\r\n\r\n  if (appStatus === 'loading') {\r\n    return <Preloader/>\r\n\r\n  }\r\n  if (appStatus === 'failed') {\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n\r\n  return <div className={s.profilePage}>\r\n    <div className={s.userProfile}>\r\n\r\n      {editMode\r\n        ? <button className={s.editBtn} onClick={saveEditedProfile}>\r\n          <img src={saveIcon} alt='Edit' width='18px' height='18px'/>\r\n        </button>\r\n        : <button className={s.editBtn} onClick={onEditMode}>\r\n          <img src={editIcon} alt='Edit' width='18px' height='18px'/>\r\n        </button>}\r\n\r\n      {!profileData.avatar &&\r\n      <div className={s.avatar}><img src={defaultAvatar} alt={'Avatar'}/></div>}\r\n\r\n      <div className={s.data}>\r\n        <div className={s.dataRow}>\r\n          <span className={s.title}>Name:</span>\r\n          {editMode\r\n            ? <input type='text' className={s.editInput} value={nameValue} onChange={changeNameHandler}/>\r\n            : <span className={s.info}>{profileData.userName}</span>}\r\n        </div>\r\n\r\n        <div className={s.dataRow}>\r\n          <span className={s.title}>Email:</span>\r\n          <span className={s.info}>{profileData.email}</span>\r\n        </div>\r\n        <div className={s.dataRow}>\r\n          <span className={s.title}>Count of Packs:</span>\r\n          <span className={s.info}>{profileData.publicCardPacksCount}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/404-error.8c0adfd2.jpg\";","import React from 'react';\r\nimport s from './Error404.module.css'\r\nimport errorImage from './../../assets/404-error.jpg'\r\n\r\nexport const Error404 = () => {\r\n  return <div className={s.error_block}>\r\n    <img className={s.error_img} src={errorImage} alt=\"404\"/>\r\n    <div className={s.error_text}>\r\n      <div className={s.error_header}>OOOPS! PAGE NOT FOUND...</div>\r\n      <p className={s.error_paragraph}>You must have picked the wrong door because I haven't been able to\r\n        lay my eye on the page you've been searching for.</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport s from './RefreshPassword.module.css'\r\nimport {authActions, sendEmail} from '../../main/m3-bll/auth-reducer';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\n\r\nexport const RefreshPassword = () => {\r\n  const isEmailSent = useSelector<AppRootStateType, boolean>(state => state.auth.isEmailSent)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const dispatch = useDispatch();\r\n\r\n  const [emailValue, setEmailValue] = useState('')\r\n\r\n  const changeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmailValue(e.currentTarget.value)\r\n  }\r\n  const sendEmailHandler = () => {\r\n    dispatch(sendEmail(emailValue))\r\n  }\r\n\r\n  return <div className={s.formPage}>\r\n    <div className={s.container}>\r\n      {!isEmailSent &&\r\n      <div>\r\n        <h2 className={s.title}>Forgot your password?</h2>\r\n        <div className={s.editBlock}>\r\n          <div className={s.itemForm}>\r\n            <input type='text' placeholder='Enter email...' value={emailValue} onChange={changeEmailHandler}/>\r\n          </div>\r\n          <div className={s.itemForm}>\r\n            <button className={s.button} onClick={sendEmailHandler} disabled={appStatus === 'loading'}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n\r\n      {isEmailSent &&\r\n      <div className={s.sent}>\r\n        <p>Success!</p>\r\n        <p>The link was sent to your email!</p>\r\n      </div>}\r\n\r\n      <NavLink className={s.link} to={PATH.LOGIN}>Log In</NavLink>\r\n\r\n      {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n    </div>\r\n  </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {NavLink, Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './SetPassword.module.css'\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {authActions, setPassword} from '../../main/m3-bll/auth-reducer';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\n\r\ntype ParamsType = {\r\n  token?: string | undefined\r\n}\r\n\r\nexport const SetPassword = () => {\r\n  const isPasswordChanged = useSelector<AppRootStateType, boolean>(state => state.auth.isPasswordChanged)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const dispatch = useDispatch();\r\n\r\n  const {token} = useParams<ParamsType>()\r\n\r\n  const [passValue1, setPassValue1] = useState('')\r\n  const [passValue2, setPassValue2] = useState('')\r\n  const [validateError, setValidateError] = useState('')\r\n\r\n  const changePass1Handler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassValue1(e.currentTarget.value)\r\n  }\r\n  const changePass2Handler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassValue2(e.currentTarget.value)\r\n  }\r\n  const setPassHandler = () => {\r\n    const pass1 = passValue1.trim()\r\n    const pass2 = passValue2.trim()\r\n    if (!pass1 && !pass2) {\r\n      setValidateError('Password is required')\r\n      return\r\n    }\r\n    if (pass1 !== pass2) {\r\n      setValidateError('The password values must be equal to!')\r\n      return\r\n    }\r\n    if (!token) {\r\n      setValidateError('Send your email for updating the password!')\r\n      return\r\n    }\r\n    if (token && pass1 === pass2) {\r\n      dispatch(setPassword(pass1, token))\r\n      setValidateError('')\r\n    }\r\n  }\r\n\r\n  if (isPasswordChanged) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  return <div className={s.formPage}>\r\n    <div className={s.container}>\r\n      <h2 className={s.title}>Set new password</h2>\r\n      <div className={s.itemForm}>\r\n        <input type='text' placeholder='New password...' value={passValue1} onChange={changePass1Handler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <input type='text' placeholder='Confirm password...' value={passValue2} onChange={changePass2Handler}/>\r\n      </div>\r\n\r\n      {validateError &&\r\n      <div className={s.validateError}>\r\n        {validateError}\r\n      </div>}\r\n\r\n      <div className={s.itemForm}>\r\n        <button className={s.button} onClick={setPassHandler} disabled={appStatus === 'loading'}>Submit</button>\r\n      </div>\r\n\r\n      <div className={s.forgot}>\r\n        <NavLink to={PATH.REFRESH} className={s.link}>Forgot your password?</NavLink>\r\n      </div>\r\n\r\n\r\n      {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n    </div>\r\n  </div>\r\n}","import axios from 'axios';\r\n\r\nconst baseLocalhostURL = 'http://localhost:7542/2.0/'\r\nconst baseHerokuURL = 'https://neko-back.herokuapp.com/2.0/'\r\nconst instance = axios.create({\r\n  baseURL: baseHerokuURL,\r\n  withCredentials: true,\r\n})\r\nexport type CardPackType = {\r\n  _id: string\r\n  user_id: string\r\n  user_name: string\r\n  private: boolean\r\n  name: string\r\n  path: string\r\n  grade: number\r\n  shots: number\r\n  cardsCount: number\r\n  type: string\r\n  rating: number\r\n  created: string\r\n  updated: string\r\n  more_id: string\r\n  __v: number\r\n}\r\nexport type GetResponsePacksCardsType = {\r\n  cardPacks: Array<CardPackType>\r\n  page: number\r\n  pageCount: number\r\n  cardPacksTotalCount: number\r\n  minCardsCount: number\r\n  maxCardsCount: number\r\n  token: string\r\n  tokenDeathTime: number\r\n}\r\nexport type PostResponsePacksCardsType = {\r\n  newCardsPack: CardPackType\r\n  token: string\r\n  tokenDeathTime: string\r\n}\r\nexport type DeleteResponsePacksCardsType = {\r\n  deletedCardsPack: CardPackType\r\n  token: string\r\n  tokenDeathTime: string\r\n}\r\n\r\nexport type CardType = {\r\n  _id: string\r\n  cardsPack_id: string\r\n  user_id: string\r\n  answer: string\r\n  question: string\r\n  grade: number\r\n  shots: number\r\n  comments: string\r\n  type: 'card',\r\n  rating: number\r\n  more_id: string\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  answerImg: string\r\n  answerVideo: string\r\n  questionImg: string\r\n  questionVideo: string\r\n}\r\nexport type GetResponseCardsType = {\r\n  cards: Array<CardType>\r\n  packUserId: string\r\n  page: number\r\n  pageCount: number\r\n  cardsTotalCount: number\r\n  minGrade: number\r\n  maxGrade: number\r\n  token: string\r\n  tokenDeathTime: number\r\n}\r\n\r\nexport type UpdateCardGradeType = {\r\n  updatedGrade: {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n    more_id: string\r\n    created: string\r\n    updated: string\r\n    \"__v\": number\r\n  },\r\n  \"token\": string\r\n  \"tokenDeathTime\": number\r\n}\r\n\r\n\r\nexport const packsCardsAPI = {\r\n  fetchPacks(page: number, pageCount: number, packName: string | null,\r\n             sortPacks: string | null, user_id?: string) {\r\n    return instance.get<GetResponsePacksCardsType>('cards/pack', {\r\n      params: {\r\n        user_id,\r\n        page,\r\n        pageCount,\r\n        packName,\r\n        sortPacks\r\n      }\r\n    })\r\n      .then(res => res.data)\r\n  },\r\n  createCardsPack(name: string) {\r\n    return instance.post<PostResponsePacksCardsType>('cards/pack', {\r\n      cardsPack: {name}\r\n    }).then(res => res.data)\r\n  },\r\n  deleteCardsPack(packId: string) {\r\n    return instance.delete<DeleteResponsePacksCardsType>(`cards/pack?id=${packId}`)\r\n      .then(res => res.data)\r\n  },\r\n  updatePack (packId?: string, newNamePack?: string) {\r\n    return instance.put(`cards/pack`, {cardsPack: {_id: packId, name: newNamePack}})\r\n  }\r\n}\r\nexport const cardsAPI = {\r\n  fetchCards(cardsPack_id: string, page: number, pageCount: number, sortCards: string | null, cardQuestion: string | null) {\r\n    return instance.get<GetResponseCardsType>(`cards/card`, {\r\n      params: {\r\n        cardsPack_id,\r\n        page,\r\n        pageCount,\r\n        sortCards,\r\n        cardQuestion\r\n      }\r\n    })\r\n      .then(res => res.data)\r\n  },\r\n  createCard(cardId?: string, question?: string, answer?: string) {\r\n    return instance.post(`cards/card`, {card: {cardsPack_id: cardId, question, answer}})\r\n  },\r\n  deleteCard(cardId?: string) {\r\n    return instance.delete(`cards/card?id=${cardId}`)\r\n  },\r\n  updateCard(cardId?: string, question?: string, answer?: string) {\r\n    return instance.put('cards/card', {card: {_id: cardId, question, answer, comments: ''  } })\r\n  }\r\n}\r\n\r\nexport const learningAPI = {\r\n  setGrade(grade: number, cardId: string) {\r\n    return instance.put<UpdateCardGradeType>(`cards/grade`, {\r\n      grade,\r\n      card_id: cardId\r\n    }).then(res => res.data)\r\n  }\r\n}","import {Dispatch} from 'redux';\r\nimport {CardPackType, packsCardsAPI} from '../m4-dal/packs-cards-API';\r\nimport {AppActionsType, appActions} from './app-reducer';\r\nimport {AppRootStateType} from './store';\r\nimport {ActionsType} from './auth-reducer';\r\n\r\n\r\n// A c t i o n s\r\nexport const packActions = {\r\n  setCardPacksData: (packs: Array<CardPackType>, pageNumber: number,\r\n                                   pageSize: number, packsTotalCount: number) => ({\r\n    type: 'cards/packs/SET-CARD-PACKS-DATA', packs, pageNumber, pageSize, packsTotalCount\r\n  } as const),\r\n  setActivePageNumber: (pageNumber: number) => ({\r\n    type: 'cards/packs/SET-ACTIVE-PAGE-NUMBER', pageNumber\r\n  } as const),\r\n  setActivePageSize: (pageSize: number) => ({\r\n    type: 'cards/packs/SET-ACTIVE-PAGE-SIZE', pageSize\r\n  } as const),\r\n  setIsMyPacks: (isMine: boolean) => ({\r\n    type: 'cards/packs/SET-IS-MY-PACKS', isMine\r\n  } as const),\r\n  setSearchPackName: (packName: string | null) => ({\r\n    type: 'cards/packs/SET-SEARCH-PACK-NAME', packName\r\n  } as const),\r\n  setSortPacksValue: (sortValue: string | null) => ({\r\n    type: 'cards/packs/SET-SORT-PACKS-VALUE', sortValue\r\n  } as const),\r\n  setOpenedPackId: (packId: string) => ({\r\n    type: 'cards/cards/SET-OPENED-PACK-ID', packId}as const),\r\n}\r\nexport type PacksActionType = ReturnType<ActionsType<typeof packActions>>\r\n\r\n// S t a t e\r\nconst packsInitialState = {\r\n  cardPacks: [] as Array<CardPackType>,\r\n  pageNumber: 1,\r\n  pageSize: 10,\r\n  cardPacksTotalCount: 0,\r\n  isMyPacks: false,\r\n  searchPackName: null as string | null,\r\n  sortPacksValue: null as string | null,\r\n  openedPackId: '',\r\n}\r\nexport type PackStateType = typeof packsInitialState;\r\n\r\n\r\n// R e d u c e r\r\nexport const packsReducer = (state: PackStateType = packsInitialState, action: PacksActionType): PackStateType => {\r\n  switch (action.type) {\r\n    case 'cards/packs/SET-CARD-PACKS-DATA':\r\n      return {\r\n        ...state,\r\n        cardPacks: action.packs,\r\n        pageSize: action.pageSize,\r\n        pageNumber: action.pageNumber,\r\n        cardPacksTotalCount: action.packsTotalCount\r\n      }\r\n    case 'cards/packs/SET-ACTIVE-PAGE-NUMBER':\r\n      return {\r\n        ...state,\r\n        pageNumber: action.pageNumber\r\n      }\r\n    case 'cards/packs/SET-ACTIVE-PAGE-SIZE':\r\n      return {\r\n        ...state,\r\n        pageSize: action.pageSize\r\n      }\r\n    case 'cards/packs/SET-IS-MY-PACKS':\r\n      return {\r\n        ...state,\r\n        isMyPacks: action.isMine\r\n      }\r\n    case 'cards/packs/SET-SEARCH-PACK-NAME':\r\n      return {\r\n        ...state,\r\n        searchPackName: action.packName\r\n      }\r\n    case 'cards/packs/SET-SORT-PACKS-VALUE':\r\n      return {\r\n        ...state,\r\n        sortPacksValue: action.sortValue\r\n      }\r\n    case 'cards/cards/SET-OPENED-PACK-ID':\r\n      return {\r\n        ...state,\r\n        openedPackId: action.packId\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// T h u n k\r\nexport const fetchPacks = (pageNumber: number) => {\r\n  return async (dispatch: Dispatch<PacksActionType | AppActionsType>, getState: () => AppRootStateType) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      const pageSize = getState().packs.pageSize\r\n      const isMine = getState().packs.isMyPacks\r\n      const userId = getState().profile.userId\r\n      const packName = getState().packs.searchPackName\r\n      const sortPacks = getState().packs.sortPacksValue\r\n      let data;\r\n      if (!isMine) {\r\n        data = await packsCardsAPI.fetchPacks(pageNumber, pageSize, packName, sortPacks)\r\n      } else {\r\n        if (userId) {\r\n          data = await packsCardsAPI.fetchPacks(pageNumber, pageSize, packName, sortPacks, userId)\r\n        } else {\r\n          throw new Error('NO USER_ID')\r\n        }\r\n      }\r\n      dispatch(packActions.setCardPacksData(data.cardPacks, data.page, data.pageCount, data.cardPacksTotalCount))\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const createCardsPack = (pageSize: number, packName: string) => {\r\n  return async (dispatch: Dispatch<PacksActionType | AppActionsType | any>) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      await packsCardsAPI.createCardsPack(packName)\r\n      await dispatch(fetchPacks(1))\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateCardsPack = (packId: string, newPackName: string) => {\r\n  return async (dispatch: Dispatch<PacksActionType | AppActionsType | any>) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      await packsCardsAPI.updatePack(packId, newPackName)\r\n      await dispatch(fetchPacks(1))\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const deleteCardsPack = (packId: string) => {\r\n  return async (dispatch: Dispatch<PacksActionType | AppActionsType | any>, getState: () => AppRootStateType) => {\r\n    try {\r\n      dispatch(appActions.setAppStatus('loading'))\r\n      const pageNumber = getState().packs.pageNumber\r\n      await packsCardsAPI.deleteCardsPack(packId)\r\n      await dispatch(fetchPacks(pageNumber))\r\n    } catch (error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n    } finally {\r\n      dispatch(appActions.setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\n\r\ntype PaginatorPropsType = {\r\n  totalItemsCount: number\r\n  pageSize: number\r\n  pageNumber: number\r\n  setActivePageNumber: (page: number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = React.memo(({\r\n                                                                     pageSize, pageNumber, setActivePageNumber, totalItemsCount\r\n                                                                   }) => {\r\n  const portionSize = 7\r\n  const [portionNumber, setPortionNumber] = useState(Math.ceil(pageNumber / portionSize));\r\n\r\n  const prevButtonHandler = () => {\r\n    setActivePageNumber(pageNumber - 1)\r\n    setPortionNumber(portionNumber - 1)\r\n  }\r\n  const nextButtonHandler = () => {\r\n    setActivePageNumber(pageNumber + 1)\r\n    setPortionNumber(portionNumber + 1)\r\n  }\r\n\r\n  const pageCount: number = Math.ceil(totalItemsCount / pageSize);\r\n  const pages: Array<number> = [];\r\n  for (let i = 1; i <= pageCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  // const portionCount = Math.ceil(pageCount / portionSize)\r\n\r\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  const rightPortionPageNumber = portionNumber * portionSize;\r\n  return <div className={s.container}>\r\n    {<button className={`${s.item} ${s.button}`}\r\n             onClick={prevButtonHandler}\r\n             disabled={pageNumber === 1}>&#171;</button>}\r\n    {pages\r\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n      .map((p: number, i: any) => {\r\n        const pageStyle = p === pageNumber ? `${s.item} ${s.page} ${s.current}` : `${s.item} ${s.page}`;\r\n        return <span key={i}\r\n                     className={pageStyle}\r\n                     onClick={() => setActivePageNumber(p)}> {p} </span>\r\n      })\r\n    }\r\n    {<button className={`${s.item} ${s.button}`}\r\n             onClick={nextButtonHandler}\r\n             disabled={pageNumber === Math.ceil(totalItemsCount / pageSize)}>&#187;</button>}\r\n  </div>\r\n})","import React from 'react';\r\nimport s from './PageSizeSelector.module.css'\r\n\r\ntype PageSizeSelectorPropsType = {\r\n  pageSize: number;\r\n  setActivePageSize: (pageSize: number) => void\r\n}\r\n\r\nexport const PageSizeSelector: React.FC<PageSizeSelectorPropsType> = React.memo(\r\n  ({pageSize, setActivePageSize}) => {\r\n    const pageSizeArr = [10, 20, 30, 40, 50]\r\n    return <div className={s.container}>\r\n      {pageSizeArr.map(ps => {\r\n        return <span key={ps}\r\n                     className={ps === pageSize ? `${s.selector} ${s.active}` : `${s.selector}`}\r\n                     onClick={() => setActivePageSize(ps)}>{ps}</span>\r\n      })}\r\n    </div>\r\n  })","export default __webpack_public_path__ + \"static/media/delete.e4efcb06.svg\";","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {packActions} from '../../../main/m3-bll/packs-reducer';\r\nimport s from './PacksTableRow.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../main/m3-bll/store';\r\nimport editIcon from './../../../assets/edit.svg'\r\nimport deleteIcon from './../../../assets/delete.svg'\r\nimport {CardPackType} from '../../../main/m4-dal/packs-cards-API';\r\nimport {ModalsType} from '../../../main/m2-components/Modals/Modal/Modal';\r\n\r\n\r\ntype PackItemPropsType = {\r\n  pack: CardPackType\r\n  setModal: (modal: ModalsType) => void\r\n  setPackId: (id: string) => void\r\n}\r\n\r\nexport const PacksTableRow: React.FC<PackItemPropsType> = React.memo(\r\n  ({pack, setModal, setPackId}) => {\r\n  const userId = useSelector<AppRootStateType, string | null>(state => state.profile.userId)\r\n  const openedPack = useSelector<AppRootStateType, string>(state => state.packs.openedPackId)\r\n  const dispatch = useDispatch()\r\n  const rowStyle = openedPack === pack._id ? `${s.row} ${s.opened}` : `${s.row}`\r\n\r\n  const openCardsHandler = () => {\r\n    dispatch(packActions.setOpenedPackId(pack._id))\r\n  }\r\n\r\n  const setModalHandler = (modal: ModalsType) => {\r\n    setPackId(pack._id)\r\n    setModal(modal)\r\n  }\r\n\r\n  return <div className={rowStyle}>\r\n\r\n    <div className={`${s.rowItem} ${s.editRowItem}`}>\r\n      {userId === pack.user_id\r\n      && <div className={s.btnRowItem}>\r\n        <button className={s.iconButton} onClick={()=> setModalHandler('update pack')}>\r\n          <img src={editIcon} alt='Edit' width='15px' height='15px' />\r\n        </button>\r\n        <button className={s.iconButton} onClick={()=> setModalHandler('delete pack')}>\r\n          <img src={deleteIcon} alt='Delete' width='15px' height='15px'/>\r\n        </button>\r\n      </div>}\r\n    </div>\r\n    <div className={`${s.rowItem} ${s.titleRowItem}`}>\r\n      <NavLink to={`/cards/${pack._id}`} className={s.cardsLink} onClick={openCardsHandler}>\r\n        {pack.name}\r\n      </NavLink>\r\n    </div>\r\n    <div className={s.rowItem}>{pack.cardsCount}</div>\r\n    <div className={s.rowItem}>{pack.updated.slice(0, 10)}</div>\r\n    <div className={`${s.rowItem} ${s.learnRowItem}`}>\r\n      <NavLink to={`/learn/${pack._id}`}>\r\n        <button className={s.button}>Learn</button>\r\n      </NavLink>\r\n    </div>\r\n  </div>\r\n})","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport s from './SearchForm.module.css'\r\nimport debounce from 'lodash.debounce'\r\n\r\ntype SearchFormPropsType = {\r\n  searchParam: string | null\r\n  placeholder: string\r\n  search: (value: string) => void\r\n}\r\n\r\nexport const SearchForm: React.FC<SearchFormPropsType> = React.memo(({searchParam, placeholder, search}) => {\r\n  if (searchParam === null) {\r\n    searchParam = ''\r\n  }\r\n  const [searchValue, setSearchValue] = useState(searchParam)\r\n\r\n  const debouncedSearch = useCallback(debounce((nextValue: string) => {\r\n    search(nextValue)\r\n  }, 1000), [])\r\n\r\n  const changeValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const nextSearchValue = e.currentTarget.value\r\n    setSearchValue(nextSearchValue)\r\n    debouncedSearch(nextSearchValue)\r\n  }\r\n  return <div>\r\n    <input placeholder={placeholder}\r\n           className={s.searchInput}\r\n           value={searchValue}\r\n           onChange={changeValueHandler}/>\r\n  </div>\r\n})","import React from 'react';\r\nimport s from './Sort.module.css'\r\n\r\ntype SortPropsType = {\r\n  up: string\r\n  down: string\r\n  upSort: () => void\r\n  downSort: () => void\r\n  sortSetValue: string | null\r\n}\r\n\r\nexport const Sort: React.FC<SortPropsType> = React.memo(\r\n  ({up, down, upSort, downSort, sortSetValue}) => {\r\n  const upStyle = sortSetValue === up ? `${s.button} ${s.up} ${s.active}` : `${s.button} ${s.up}`\r\n  const downStyle = sortSetValue === down ? `${s.button} ${s.down} ${s.active}` : `${s.button} ${s.down}`\r\n\r\n  return <div className={s.sort}>\r\n    <button className={upStyle} onClick={upSort}>&#10095;</button>\r\n    <button className={downStyle} onClick={downSort}>&#10095;</button>\r\n  </div>\r\n})","import React from 'react';\r\nimport s from './Modal.module.css'\r\n\r\nexport type ModalsType = 'delete pack'\r\n  | 'delete card'\r\n  | 'add pack'\r\n  | 'add card'\r\n  | 'update card'\r\n  | 'update pack'\r\n  | null\r\ntype ModalPropsType = {\r\n  setCancel: () => void\r\n}\r\n\r\nexport const Modal: React.FC<ModalPropsType> = (\r\n  {children, setCancel}) => {\r\n\r\n  return <>\r\n    <div className={s.modalPage} onClick={() => setCancel()}/>\r\n      <div className={s.container}>\r\n        {children}\r\n      </div>\r\n  </>\r\n}","import React from 'react';\r\nimport {Modal, ModalsType} from '../Modal/Modal';\r\nimport s from './ModalDelete.module.css'\r\n\r\ntype ModalDeletePropsType = {\r\n  modal: ModalsType\r\n  isModal: boolean\r\n  setModal: (modal: ModalsType) => void\r\n  deleteItem: () => void\r\n}\r\n\r\nexport const ModalDelete: React.FC<ModalDeletePropsType> = React.memo((\r\n  {modal, isModal, deleteItem, setModal}) => {\r\n  const setDelete = () => {\r\n    deleteItem()\r\n    setModal(null)\r\n  }\r\n  const setCancel = () => {\r\n    setModal(null)\r\n  }\r\n\r\n  if (!isModal) return null\r\n  return <Modal setCancel={setCancel}>\r\n    {modal === 'delete pack' &&\r\n    <div className={s.title}>Do you want to delete this pack?</div>}\r\n    {modal === 'delete card' &&\r\n    <div className={s.title}>Do you want to delete this card?</div>}\r\n      <div className={s.buttons}>\r\n      <button className={s.button} onClick={setCancel}>Cancel</button>\r\n      <button className={s.button} onClick={setDelete}>Delete</button>\r\n      </div>\r\n  </Modal>\r\n})","import {Modal, ModalsType} from '../Modal/Modal';\r\nimport React, {ChangeEvent, useState} from 'react';\r\nimport s from './ModalAdd.module.css';\r\n\r\ntype ModalAddPropsType = {\r\n  modal: ModalsType\r\n  isModal: boolean\r\n  setModal: (modal: ModalsType) => void\r\n  addPack: ((name: string) => void) | undefined\r\n  addCard: ((answer: string, question: string) => void) | undefined\r\n}\r\n\r\nexport const ModalAdd: React.FC<ModalAddPropsType> = React.memo((\r\n  {modal, isModal, setModal, addPack, addCard}) => {\r\n  const [packName, setPackName] = useState('')\r\n  const [cardData, setCardData] = useState({question: '', answer: ''})\r\n\r\n  const setAdd = () => {\r\n    if (addPack) {\r\n      addPack(packName)\r\n      setPackName('')\r\n      setModal(null)\r\n    }\r\n    if (addCard) {\r\n      addCard(cardData.question, cardData.answer)\r\n      setCardData({question: '', answer: ''})\r\n      setModal(null)\r\n    }\r\n  }\r\n  const setCancel = () => {\r\n    setModal(null)\r\n    setPackName('')\r\n    setCardData({question: '', answer: ''})\r\n  }\r\n  const changePackNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPackName(e.currentTarget.value)\r\n  }\r\n  const changeCardModalQuestionHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const question = e.currentTarget.value\r\n    setCardData({...cardData, question})\r\n  }\r\n  const changeCardModalAnswerHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const answer = e.currentTarget.value\r\n    setCardData({...cardData, answer})\r\n  }\r\n\r\n  if (!isModal) return null\r\n  return <Modal setCancel={setCancel}>\r\n    {modal === 'add pack' && <div className={s.input}>\r\n      <input className={s.nameInput}\r\n             type=\"text\"\r\n             value={packName}\r\n             onChange={changePackNameHandler}\r\n             placeholder='Pack name...'/>\r\n    </div>}\r\n\r\n    {modal === 'add card' && <div className={s.textarea}>\r\n      <textarea className={s.cardData} rows={3}\r\n                value={cardData.question}\r\n                onChange={changeCardModalQuestionHandler}\r\n                placeholder='Question'/>\r\n      <textarea className={s.cardData} rows={3}\r\n                value={cardData.answer}\r\n                onChange={changeCardModalAnswerHandler}\r\n                placeholder='Answer'/>\r\n    </div>}\r\n\r\n    <div className={s.buttons}>\r\n      <button className={s.button} onClick={setCancel}>Cancel</button>\r\n      <button className={s.button} onClick={setAdd}>Add</button>\r\n    </div>\r\n  </Modal>\r\n})","import React, {ChangeEvent, useState} from 'react';\r\nimport {Modal, ModalsType} from '../Modal/Modal';\r\nimport s from './ModalUpdate.module.css'\r\n\r\ntype ModalUpdatePropsType = {\r\n  modal: ModalsType\r\n  isModal: boolean\r\n  setModal: (modal: ModalsType) => void\r\n  updatePack: ((name: string) => void) | undefined\r\n  updateCard: ((question: string, answer: string) => void) | undefined\r\n}\r\n\r\nexport const ModalUpdate: React.FC<ModalUpdatePropsType> = React.memo((\r\n  {modal, isModal, setModal, updatePack, updateCard}) => {\r\n  const [newPackName, setNewPackName] = useState('')\r\n  const [newCardData, setNewCardData] = useState({question: '', answer: ''})\r\n\r\n  const setUpdate = () => {\r\n    if (updatePack) {\r\n      updatePack(newPackName)\r\n      setNewPackName('')\r\n      setNewCardData({question: '', answer: ''})\r\n      setModal(null)\r\n    }\r\n    if (updateCard) {\r\n      updateCard(newCardData.question, newCardData.answer)\r\n      setNewPackName('')\r\n      setNewCardData({question: '', answer: ''})\r\n      setModal(null)\r\n    }\r\n  }\r\n  const setCancel = () => {\r\n    setModal(null)\r\n    setNewPackName('')\r\n    setNewCardData({question: '', answer: ''})\r\n  }\r\n  const changePackNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPackName(e.currentTarget.value)\r\n  }\r\n  const changeQuestionHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const question = e.currentTarget.value\r\n    setNewCardData({...newCardData, question})\r\n  }\r\n  const changeAnswerHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const answer = e.currentTarget.value\r\n    setNewCardData({...newCardData, answer})\r\n  }\r\n\r\n  if (!isModal) return null\r\n  return <Modal setCancel={setCancel}>\r\n    {modal === 'update pack' && <div className={s.input}>\r\n    <input className={s.nameInput}\r\n           type=\"text\"\r\n           value={newPackName}\r\n           onChange={changePackNameHandler}/>\r\n    </div>}\r\n    {modal === 'update card' && <div className={s.textarea}>\r\n      <textarea className={s.cardData} rows={3}\r\n                value={newCardData.question}\r\n                onChange={changeQuestionHandler}\r\n                placeholder='Question'/>\r\n      <textarea className={s.cardData} rows={3}\r\n                value={newCardData.answer}\r\n                onChange={changeAnswerHandler}\r\n                placeholder='Answer'/>\r\n    </div>}\r\n\r\n     <div className={s.buttons}>\r\n      <button className={s.button} onClick={setCancel}>Cancel</button>\r\n      <button className={s.button} onClick={setUpdate}>Update</button>\r\n    </div>\r\n  </Modal>\r\n})","import React from 'react';\r\nimport {ModalDelete} from './ModalDelete/ModalDelete';\r\nimport {ModalsType} from './Modal/Modal';\r\nimport {ModalAdd} from './ModalAdd/ModalAdd';\r\nimport {ModalUpdate} from './ModalUpdate/ModalUpdate';\r\n\r\ntype ModalsContainerPropsType = {\r\n\tmodal: ModalsType\r\n\tsetModal: (modal: ModalsType) => void\r\n\tdeleteItem: () => void\r\n\tupdatePack?: ((name: string) => void) | undefined\r\n\tupdateCard?: ((question: string, answer: string) => void) | undefined\r\n\taddPack?: ((name: string) => void) | undefined\r\n\taddCard?: ((answer: string, question: string) => void) | undefined\r\n}\r\nexport const ModalsContainer: React.FC<ModalsContainerPropsType> = (\r\n\t{modal, setModal, deleteItem, updatePack,\r\n\t\taddPack, addCard, updateCard}) => {\r\n\r\n\treturn <>\r\n\t\t<ModalDelete modal={modal}\r\n\t\t\t\t\t\t\t\t isModal={modal === 'delete pack' || modal === 'delete card'}\r\n\t\t\t\t\t\t\t\t setModal={setModal}\r\n\t\t\t\t\t\t\t\t deleteItem={deleteItem}/>\r\n\t\t<ModalAdd modal={modal}\r\n\t\t\t\t\t\t\tisModal={modal === 'add pack' || modal === 'add card'}\r\n\t\t\t\t\t\t\tsetModal={setModal}\r\n\t\t\t\t\t\t\taddPack={addPack}\r\n\t\t\t\t\t\t\taddCard={addCard}/>\r\n\t\t<ModalUpdate modal={modal}\r\n\t\t\t\t\t\t\t\t isModal={modal === 'update pack' || modal === 'update card'}\r\n\t\t\t\t\t\t\t\t setModal={setModal}\r\n\t\t\t\t\t\t\t\t updatePack={updatePack}\r\n\t\t\t\t\t\t\t\t updateCard={updateCard}/>\r\n\t</>\r\n}","import {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {\r\n  createCardsPack,\r\n  deleteCardsPack,\r\n  fetchPacks,\r\n  packActions,\r\n  updateCardsPack\r\n} from '../../main/m3-bll/packs-reducer';\r\nimport React, {useCallback, useEffect, useState} from 'react';\r\nimport {Preloader} from '../../main/m2-components/Preloader/Preloader';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport s from './Packs.module.css'\r\nimport {CardPackType} from '../../main/m4-dal/packs-cards-API';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {initializeUser} from '../../main/m3-bll/auth-reducer';\r\nimport {Paginator} from '../../main/m2-components/Paginator/Paginator';\r\nimport {PageSizeSelector} from '../../main/m2-components/PageSizeSelector/PageSizeSelector';\r\nimport {PacksTableRow} from './PacksTableRow/PacksTableRow';\r\nimport {SearchForm} from '../../main/m2-components/SearchForm/SearchForm';\r\nimport {Sort} from '../../main/m2-components/Sort/Sort';\r\nimport {ModalsType} from '../../main/m2-components/Modals/Modal/Modal';\r\nimport {ModalsContainer} from '../../main/m2-components/Modals/MadalsContainer';\r\n\r\nexport const Packs = () => {\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const cardPacks = useSelector<AppRootStateType, Array<CardPackType>>(state => state.packs.cardPacks)\r\n  const pageNumber = useSelector<AppRootStateType, number>(state => state.packs.pageNumber)\r\n  const pageSize = useSelector<AppRootStateType, number>(state => state.packs.pageSize)\r\n  const isMyPacks = useSelector<AppRootStateType, boolean>(state => state.packs.isMyPacks)\r\n  const searchPackName = useSelector<AppRootStateType, string | null>(state => state.packs.searchPackName)\r\n  const sortPacksValue = useSelector<AppRootStateType, string | null>(state => state.packs.sortPacksValue)\r\n  const totalPacksCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n  const dispatch = useDispatch();\r\n\r\n  const [packId, setPackId] = useState('')\r\n  const [modal, setModal] = useState<ModalsType>(null)\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      dispatch(initializeUser())\r\n    }\r\n  }, [isLoggedIn])\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(fetchPacks(pageNumber))\r\n    }\r\n  }, [isLoggedIn, pageNumber, pageSize, isMyPacks, searchPackName, sortPacksValue])\r\n\r\n\r\n  const deletePackHandler = () => {\r\n    dispatch(deleteCardsPack(packId))\r\n    setPackId('')\r\n  }\r\n  const updatePackHandler = (newName: string) => {\r\n    dispatch(updateCardsPack(packId, newName))\r\n    setPackId('')\r\n  }\r\n  const addPackHandler = (name: string) => {\r\n    dispatch(createCardsPack(pageSize, name))\r\n  }\r\n\r\n\r\n  const showMyPacksHandler = () => {\r\n    dispatch(packActions.setIsMyPacks(!isMyPacks))\r\n  }\r\n  const setActivePacksPageSize = useCallback((pageSize: number) => {\r\n    dispatch(packActions.setActivePageSize(pageSize))\r\n  }, [])\r\n  const setActivePacksPageNumber = useCallback((page: number) => {\r\n    dispatch(packActions.setActivePageNumber(page))\r\n  }, [])\r\n  const searchPackNameHandler = useCallback((value: string) => {\r\n    dispatch(packActions.setSearchPackName(value))\r\n  }, [])\r\n  const upSortHandler = useCallback(() => {\r\n    dispatch(packActions.setSortPacksValue('0cardsCount'))\r\n  }, [])\r\n  const downSortHandler = useCallback(() => {\r\n    dispatch(packActions.setSortPacksValue('1cardsCount'))\r\n  }, [])\r\n\r\n\r\n  const tableRows = cardPacks.map(p => <PacksTableRow key={p._id}\r\n                                                      pack={p}\r\n                                                      setPackId={setPackId}\r\n                                                      setModal={setModal}/>)\r\n  if (appStatus === 'loading') {\r\n    return <Preloader/>\r\n  }\r\n  if (appStatus === 'failed') {\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  return <div className={s.packsPage}>\r\n    <ModalsContainer modal={modal}\r\n                     setModal={setModal}\r\n                     updatePack={updatePackHandler}\r\n                     deleteItem={deletePackHandler}\r\n                     addPack={addPackHandler}/>\r\n    <div className={s.tableControls}>\r\n      <div>\r\n        <div className={s.searchForm}>\r\n          <SearchForm searchParam={searchPackName}\r\n                      placeholder={'Title...'}\r\n                      search={searchPackNameHandler}/>\r\n        </div>\r\n        <div className={s.showMine}>\r\n          <input type='checkbox' id='myPacks' checked={isMyPacks} onChange={showMyPacksHandler}/>\r\n          <label htmlFor='myPacks'>Show my packs</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.pageControls}>\r\n        <Paginator totalItemsCount={totalPacksCount}\r\n                   setActivePageNumber={setActivePacksPageNumber}\r\n                   pageNumber={pageNumber}\r\n                   pageSize={pageSize}/>\r\n        <PageSizeSelector pageSize={pageSize} setActivePageSize={setActivePacksPageSize}/>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.table}>\r\n      <div className={s.headerTable}>\r\n        <div className={`${s.headerItem} ${s.headerEdit}`}>\r\n          <button className={s.addButton} onClick={() => setModal('add pack')}>Pack</button>\r\n        </div>\r\n        <div className={`${s.headerItem} ${s.headerTitle}`}>Title</div>\r\n        <div className={s.headerItem}>Count of cards\r\n          <Sort up={'0cardsCount'}\r\n                down={'1cardsCount'}\r\n                upSort={upSortHandler}\r\n                downSort={downSortHandler}\r\n                sortSetValue={sortPacksValue}/>\r\n        </div>\r\n        <div className={s.headerItem}>Updated</div>\r\n        <div className={`${s.headerItem} ${s.headerLearn}`}>Learn</div>\r\n      </div>\r\n      <div className={s.rows}>\r\n        {tableRows}\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {appActions, AppActionsType} from \"./app-reducer\";\r\nimport {ActionsType} from \"./auth-reducer\";\r\nimport {cardsAPI, CardType} from '../m4-dal/packs-cards-API';\r\nimport {AppRootStateType} from './store';\r\n\r\nexport const cardsActions = {\r\n\tsetCardsData: (cards: Array<CardType>, pageNumber: number,\r\n\t\t\t\t\t\t\t\t pageSize: number, cardsTotalCount: number) => ({\r\n\t\ttype: 'cards/cards/SET-CARDS-DATA', cards, pageNumber, pageSize, cardsTotalCount\r\n\t} as const),\r\n\tsetActivePageSize: (pageSize: number) => ({\r\n\t\ttype: 'cards/cards/SET-ACTIVE-PAGE-SIZE', pageSize\r\n\t} as const),\r\n\tsetActivePageNumber: (pageNumber: number) => ({\r\n\t\ttype: 'cards/cards/SET-ACTIVE-PAGE-NUMBER', pageNumber\r\n\t} as const),\r\n\tsetSearchCardQuestion: (question: string) => ({\r\n\t\ttype: 'cards/cards/SET-SEARCH-CARD-QUESTION', question\r\n\t} as const),\r\n\tsetSortCardsValue: (sortValue: string) => ({\r\n\t\ttype: 'cards/cards/SET-SORT-CARDS-VALUE', sortValue\r\n\t} as const),\r\n}\r\nexport type CardActionType = ReturnType<ActionsType<typeof cardsActions>>\r\n\r\n// S t a t e\r\nconst cardsInitialState = {\r\n\tcards: [] as Array<CardType>,\r\n\tcardsTotalCount: 0,\r\n\tpageNumber: 1,\r\n\tpageCount: 10,\r\n\tpageSize: 10,\r\n\tsearchCardQuestion: null as string | null,\r\n\tsortCardsValue: null as string | null,\r\n}\r\nexport type CardStateType = typeof cardsInitialState;\r\n\r\n\r\n// R e d u c e r\r\nexport const cardsReducer = (state: CardStateType = cardsInitialState, action: CardActionType): CardStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'cards/cards/SET-CARDS-DATA':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: action.cards,\r\n\t\t\t\tpageNumber: action.pageNumber,\r\n\t\t\t\tpageSize: action.pageSize,\r\n\t\t\t\tcardsTotalCount: action.cardsTotalCount\r\n\t\t\t}\r\n\t\tcase 'cards/cards/SET-ACTIVE-PAGE-SIZE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpageSize: action.pageSize\r\n\t\t\t}\r\n\t\tcase 'cards/cards/SET-ACTIVE-PAGE-NUMBER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpageNumber: action.pageNumber\r\n\t\t\t}\r\n\t\tcase 'cards/cards/SET-SEARCH-CARD-QUESTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsearchCardQuestion: action.question\r\n\t\t\t}\r\n\t\tcase 'cards/cards/SET-SORT-CARDS-VALUE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsortCardsValue: action.sortValue\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// T h u n k\r\nexport const fetchCards = (packID: string) => {\r\n\treturn async (dispatch: Dispatch<CardActionType | AppActionsType>, getState: () => AppRootStateType) => {\r\n\t\ttry {\r\n\t\t\tdispatch(appActions.setAppStatus('loading'))\r\n\t\t\tconst pageNumber = getState().cards.pageNumber\r\n\t\t\tconst pageSize = getState().cards.pageSize\r\n\t\t\tconst sort = getState().cards.sortCardsValue\r\n\t\t\tconst cardQuestion = getState().cards.searchCardQuestion\r\n\t\t\tconst data = await cardsAPI.fetchCards(packID, pageNumber, pageSize, sort, cardQuestion)\r\n\t\t\tdispatch(cardsActions.setCardsData(data.cards, data.page, data.pageCount, data.cardsTotalCount))\r\n\t\t\tconsole.log('GET cards')\r\n\t\t} catch(error) {\r\n\t\t\tdispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n\t\t\t\t: error.message ? error.message\r\n\t\t\t\t\t: 'Some error occurred'))\r\n\t\t\tconsole.log('NO CARD')\r\n\t\t} finally {\r\n\t\t\tdispatch(appActions.setAppStatus('succeeded'))\r\n\t\t}\r\n\t}\r\n}\r\nexport const createCards = (packID: string, question: string, answer: string) => {\r\n\treturn async (dispatch: Dispatch<CardActionType | AppActionsType | any>) => {\r\n\t\ttry {\r\n\t\t\tdispatch(appActions.setAppStatus('loading'))\r\n\t\t\tawait cardsAPI.createCard(packID, question, answer)\r\n\t\t\tawait dispatch(fetchCards(packID))\r\n\t\t\tconsole.log('Card is created')\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n\t\t\t\t: error.message ? error.message\r\n\t\t\t\t\t: 'Some error occurred'))\r\n\t\t\tconsole.log('Card is NOT created')\r\n\t\t} finally {\r\n\t\t\tdispatch(appActions.setAppStatus('succeeded'))\r\n\t\t}\r\n\t}\r\n}\r\nexport const updateCards = (packID: string, cardId:string, question: string, answer: string) => {\r\n\treturn async (dispatch: Dispatch<CardActionType | AppActionsType | any>) => {\r\n\t\ttry {\r\n\t\t\tdispatch(appActions.setAppStatus('loading'))\r\n\t\t\tawait cardsAPI.updateCard(cardId, question, answer)\r\n\t\t\tawait dispatch(fetchCards(packID))\r\n\t\t\tconsole.log('Card is update')\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n\t\t\t\t: error.message ? error.message\r\n\t\t\t\t\t: 'Some error occurred'))\r\n\t\t\tconsole.log('Card is NOT created')\r\n\t\t} finally {\r\n\t\t\tdispatch(appActions.setAppStatus('succeeded'))\r\n\t\t}\r\n\t}\r\n}\r\nexport const deleteCards = (cardId: string) => {\r\n\treturn async (dispatch: Dispatch<CardActionType | AppActionsType | any>, getState: () => AppRootStateType) => {\r\n\t\ttry {\r\n\t\t\tdispatch(appActions.setAppStatus('loading'))\r\n\t\t\tawait cardsAPI.deleteCard(cardId)\r\n\t\t\tconst packId = getState().packs.openedPackId\r\n\t\t\tawait dispatch(fetchCards(packId))\r\n\t\t\tconsole.log('Card is deleted')\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n\t\t\t\t: error.message ? error.message\r\n\t\t\t\t\t: 'Some error occurred'))\r\n\t\t\tconsole.log('Card is NOT deleted')\r\n\t\t} finally {\r\n\t\t\tdispatch(appActions.setAppStatus('succeeded'))\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\nimport s from './CardsTableRow.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport editIcon from '../../../assets/edit.svg';\r\nimport deleteIcon from '../../../assets/delete.svg';\r\nimport {CardType} from '../../../main/m4-dal/packs-cards-API';\r\nimport {AppRootStateType} from '../../../main/m3-bll/store';\r\nimport {ModalsType} from '../../../main/m2-components/Modals/Modal/Modal';\r\n\r\n\r\ntype CardTablePropsType = {\r\n  card: CardType\r\n  setModal: (modal: ModalsType) => void\r\n  setCardId: (id: string) => void\r\n\r\n}\r\n\r\nexport const CardsTableRow: React.FC<CardTablePropsType> = (\r\n  {card, setCardId, setModal}) => {\r\n  const userId = useSelector<AppRootStateType, string | null>(state => state.profile.userId)\r\n  const isOwner = userId === card.user_id\r\n  const rowItemStyle = isOwner ? s.rowItem : `${s.rowItem} ${s.rowItemGeneral}`\r\n  const rowMainItemStyle = isOwner ? `${rowItemStyle} ${s.mainRowItem}` : `${rowItemStyle} ${s.mainRowItemGeneral}`\r\n\r\n  const setModalHandler = (modal: ModalsType) => {\r\n    setModal(modal)\r\n    setCardId(card._id)\r\n  }\r\n\r\n  return <div className={s.row}>\r\n    {userId === card.user_id && <div className={s.rowItem}>\r\n      <div className={s.btnRowItem}>\r\n        <button className={s.iconButton} onClick={()=> setModalHandler('update card')}>\r\n          <img src={editIcon} alt='Edit' width='15px' height='15px'/>\r\n        </button>\r\n        <button className={s.iconButton} onClick={() => setModalHandler('delete card')}>\r\n          <img src={deleteIcon} alt='Delete' width='15px' height='15px'/>\r\n        </button>\r\n      </div>\r\n    </div>}\r\n    <div className={rowMainItemStyle}>{card.question}</div>\r\n    <div className={rowMainItemStyle}>{card.answer}</div>\r\n    <div className={rowItemStyle}>{card.grade.toFixed(3)}</div>\r\n    <div className={`${rowItemStyle} ${s.updatedRowItem}`}>{card.updated.slice(0, 10)}</div>\r\n  </div>\r\n};\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {SearchForm} from '../../main/m2-components/SearchForm/SearchForm';\r\nimport {PageSizeSelector} from '../../main/m2-components/PageSizeSelector/PageSizeSelector';\r\nimport {Paginator} from '../../main/m2-components/Paginator/Paginator';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {CardType} from '../../main/m4-dal/packs-cards-API';\r\nimport {Preloader} from '../../main/m2-components/Preloader/Preloader';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport {cardsActions, createCards, deleteCards, fetchCards, updateCards} from '../../main/m3-bll/cards-reducer';\r\nimport {initializeUser} from '../../main/m3-bll/auth-reducer';\r\nimport s from './Cards.module.css'\r\nimport {CardsTableRow} from './CardsTabelRow/CardsTabelRow';\r\nimport {Sort} from '../../main/m2-components/Sort/Sort';\r\nimport {packActions} from '../../main/m3-bll/packs-reducer';\r\nimport {ModalsType} from '../../main/m2-components/Modals/Modal/Modal';\r\nimport {ModalsContainer} from '../../main/m2-components/Modals/MadalsContainer';\r\n\r\nexport const Cards = () => {\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const userId = useSelector<AppRootStateType, string | null>(state => state.profile.userId)\r\n  const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n  const openedPackId = useSelector<AppRootStateType, string>(state => state.packs.openedPackId)\r\n  const pageNumber = useSelector<AppRootStateType, number>(state => state.cards.pageNumber)\r\n  const pageSize = useSelector<AppRootStateType, number>(state => state.cards.pageSize)\r\n  const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cards.cardsTotalCount)\r\n  const searchCardQuestion = useSelector<AppRootStateType, string | null>(state => state.cards.searchCardQuestion)\r\n  const sortCardsValue = useSelector<AppRootStateType, string | null>(state => state.cards.sortCardsValue)\r\n\r\n  const dispatch = useDispatch()\r\n  const {packIdParam} = useParams<{ packIdParam: string }>()\r\n  const isOwner = cards.every(c => c.user_id === userId)\r\n  const headerItemStyle = isOwner ? s.headerItem : `${s.headerItem} ${s.headerItemGeneral}`\r\n  const mainHeaderItemStyle = isOwner ? `${headerItemStyle} ${s.mainHeaderItem}` : `${headerItemStyle} ${s.mainHeaderItemGeneral}`\r\n\r\n  const [cardId, setCardId] = useState('')\r\n  const [modal, setModal] = useState<ModalsType>(null)\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      dispatch(initializeUser())\r\n    }\r\n  }, [isLoggedIn])\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      if (!packIdParam) return\r\n      if (!openedPackId && packIdParam) {\r\n        dispatch(packActions.setOpenedPackId(packIdParam))\r\n        dispatch(fetchCards(packIdParam))\r\n      }\r\n      if (openedPackId && packIdParam) {\r\n        dispatch(fetchCards(openedPackId))\r\n      }\r\n    }\r\n  }, [isLoggedIn, pageNumber, pageSize, searchCardQuestion, sortCardsValue])\r\n\r\n\r\n  const deleteCardHandler = () => {\r\n    dispatch(deleteCards(cardId))\r\n    setCardId('')\r\n  }\r\n  const updateCardHandler = (question: string, answer: string) => {\r\n    dispatch(updateCards(packIdParam, cardId, question, answer))\r\n    setCardId('')\r\n  }\r\n  const addCardHandler = (question: string, answer: string) => {\r\n    dispatch(createCards(openedPackId, question, answer))\r\n  }\r\n\r\n  const setActiveCardsPageSize = useCallback((pageSize: number) => {\r\n    dispatch(cardsActions.setActivePageSize(pageSize))\r\n  }, [])\r\n  const setActiveCardsPageNumber = useCallback((page: number) => {\r\n    dispatch(cardsActions.setActivePageNumber(page))\r\n  }, [])\r\n  const searchCardQuestionHandler = useCallback((value: string) => {\r\n    dispatch(cardsActions.setSearchCardQuestion(value))\r\n  }, [])\r\n  const upSortHandler = useCallback(() => {\r\n    dispatch(cardsActions.setSortCardsValue('0grade'))\r\n  }, [])\r\n  const downSortHandler = useCallback(() => {\r\n    dispatch(cardsActions.setSortCardsValue('1grade'))\r\n  }, [])\r\n\r\n\r\n  const tableRows = cards.map(c => <CardsTableRow key={c._id}\r\n                                                  card={c}\r\n                                                  setModal={setModal}\r\n                                                  setCardId={setCardId}/>)\r\n  if (appStatus === 'loading') {\r\n    return <Preloader/>\r\n  }\r\n  if (appStatus === 'failed') {\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  return <div className={s.cardsPage}>\r\n    <ModalsContainer modal={modal}\r\n                     setModal={setModal}\r\n                     updateCard={updateCardHandler}\r\n                     addCard={addCardHandler}\r\n                     deleteItem={deleteCardHandler}/>\r\n    <div className={s.tableControls}>\r\n      <SearchForm searchParam={searchCardQuestion}\r\n                  placeholder={'Question...'}\r\n                  search={searchCardQuestionHandler}/>\r\n      <div className={s.pageControls}>\r\n        <Paginator pageSize={pageSize}\r\n                   pageNumber={pageNumber}\r\n                   setActivePageNumber={setActiveCardsPageNumber}\r\n                   totalItemsCount={cardsTotalCount}/>\r\n        <PageSizeSelector pageSize={pageSize}\r\n                          setActivePageSize={setActiveCardsPageSize}/>\r\n      </div>\r\n\r\n    </div>\r\n    <div className={s.table}>\r\n      <div className={s.headerTable}>\r\n        {isOwner &&\r\n        <div className={headerItemStyle}>\r\n          <button className={s.addButton} onClick={() => setModal('add card')}>Card</button>\r\n        </div>}\r\n\r\n        <div className={mainHeaderItemStyle}>Question</div>\r\n        <div className={mainHeaderItemStyle}>Answer</div>\r\n        <div className={headerItemStyle}>Grade\r\n          <Sort up={'0grade'}\r\n                down={'1grade'}\r\n                upSort={upSortHandler}\r\n                downSort={downSortHandler}\r\n                sortSetValue={sortCardsValue}/>\r\n        </div>\r\n        <div className={`${headerItemStyle} ${s.updatedHeaderItem}`}>Updated</div>\r\n      </div>\r\n      <div className={s.rows}>\r\n        {isLoggedIn && !packIdParam && <div>Choose a Pack...</div>}\r\n        {packIdParam && cards.length === 0 && <div>There are no cards in this pack...</div>}\r\n        {tableRows}\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n};","import {ActionsType} from './auth-reducer';\r\nimport {CardType, learningAPI} from '../m4-dal/packs-cards-API';\r\nimport { Dispatch } from 'redux';\r\nimport {appActions} from './app-reducer';\r\n\r\n// A c t i o n s\r\nexport const learningActions = {\r\n  setLearningCardData: (card: CardType) => ({\r\n    type: 'cards/learning/SET-LEARNING-CARD-DATA', card\r\n  } as const),\r\n  updateCardGrade: (grade: number, shots: number) => ({\r\n    type: 'cards/learning/UPDATE-CARD-GRADE', grade, shots\r\n  } as const)\r\n}\r\nexport type LearningActionType = ReturnType<ActionsType<typeof learningActions>>\r\n\r\n\r\nconst LearningInitialState = {} as CardType\r\nexport type LearnStateType = typeof LearningInitialState;\r\n\r\n// R e d u c e r\r\nexport const learningReducer = (state: LearnStateType = LearningInitialState, action: LearningActionType): LearnStateType => {\r\n  switch (action.type) {\r\n    case 'cards/learning/SET-LEARNING-CARD-DATA':\r\n      return {\r\n        ...state,\r\n        ...action.card\r\n      }\r\n    case 'cards/learning/UPDATE-CARD-GRADE':\r\n      return {\r\n        ...state,\r\n        grade: action.grade,\r\n        shots: action.shots\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// T h u n k\r\nexport const setGrade = (grade: number, cardId: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const data = await learningAPI.setGrade(grade, cardId)\r\n      dispatch(learningActions.updateCardGrade(data.updatedGrade.grade, data.updatedGrade.shots))\r\n    } catch(error) {\r\n      dispatch(appActions.setRequestError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n    }\r\n  }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport s from './LearnCards.module.css'\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchCards} from '../../main/m3-bll/cards-reducer';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {CardType} from '../../main/m4-dal/packs-cards-API';\r\nimport {learningActions, setGrade} from '../../main/m3-bll/learning-reducer';\r\nimport {Preloader} from '../../main/m2-components/Preloader/Preloader';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport {initializeUser} from '../../main/m3-bll/auth-reducer';\r\nimport {packActions} from '../../main/m3-bll/packs-reducer';\r\n\r\nconst grades = ['Didn\\'t know', 'Forgot', 'Thought long', 'Confused', 'I know it!'];\r\n\r\nconst getCard = (cards: Array<CardType>) => {\r\n  const sum = cards.reduce((acc, card) => acc + (6 - card.grade) ** 2, 0);\r\n  const random = Math.random() * sum;\r\n  const res = cards.reduce((acc: { sum: number, id: number}, card, i) => {\r\n      const newSum = acc.sum + (6 - card.grade) ** 2;\r\n      return {sum: newSum, id: newSum < random ? i : acc.id}\r\n    }\r\n    , {sum: 0, id: -1});\r\n  console.log('test: ', sum, random, res)\r\n\r\n  return cards[res.id + 1];\r\n}\r\n\r\nexport const LearnCards = () => {\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const openedPackId = useSelector<AppRootStateType, string>(state => state.packs.openedPackId)\r\n  const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n  const learningCard = useSelector<AppRootStateType, CardType>(state => state.learning)\r\n  const {packIdParam} = useParams<{ packIdParam?: string }>();\r\n  const [isFirst, setIsFirst] = useState(true)\r\n  const [isChecked, setIsChecked] = useState(false)\r\n  const [isFlip, setIsFlip] = useState(false)\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      dispatch(initializeUser())\r\n    }\r\n  }, [isLoggedIn])\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      if (!packIdParam) return\r\n      if (isFirst && !openedPackId && packIdParam) {\r\n        dispatch(packActions.setOpenedPackId(packIdParam))\r\n        dispatch(fetchCards(packIdParam))\r\n        setIsFirst(false)\r\n      }\r\n      if (isFirst && openedPackId && packIdParam) {\r\n        dispatch(fetchCards(packIdParam))\r\n        setIsFirst(false)\r\n      }\r\n      if (cards.length > 0) {\r\n        const card = getCard(cards)\r\n        dispatch(learningActions.setLearningCardData(card))\r\n      }\r\n    }\r\n\r\n  }, [isLoggedIn, packIdParam, cards, isFirst])\r\n\r\n  const checkHandler = () => {\r\n    setIsChecked(true)\r\n    setIsFlip(!isFlip)\r\n  }\r\n  const nextQuestionHandler = () => {\r\n    if (cards.length > 0) {\r\n      setIsChecked(false)\r\n      setIsFlip(!isFlip)\r\n      const card = getCard(cards)\r\n      dispatch(learningActions.setLearningCardData(card))\r\n    }\r\n  }\r\n  const flipCard = isFlip ? s.flip : ''\r\n\r\n  if (appStatus === 'loading') {\r\n    return <Preloader/>\r\n  }\r\n  if (appStatus === 'failed') {\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  return <div className={s.learnPage}>\r\n    <div className={`${s.card} ${flipCard}`}>\r\n    {!isChecked && <div className={`${s.front}`}>\r\n      <h3 className={s.title}>Question</h3>\r\n      <div className={`${s.textBlock} ${s.question}`}>{learningCard.question}</div>\r\n      <button className={s.button} onClick={checkHandler}>Check</button>\r\n    </div>}\r\n\r\n    {isChecked && <div className={`${s.back}`}>\r\n      <h3 className={`${s.title} ${s.titleBack}`}>Answer</h3>\r\n      <div className={`${s.textBlock} ${s.answer}`}>{learningCard.answer}</div>\r\n      <div className={s.grades}>\r\n      {grades.map((gr, i) => {\r\n        const setGradeHandler = () => {\r\n          dispatch(setGrade(i + 1, learningCard._id))\r\n        }\r\n        return <button className={`${s.button} ${s.buttonBack} ${s.grade}`} key={gr} onClick={setGradeHandler}>{gr}</button>\r\n      })}\r\n      </div>\r\n      <div><button className={`${s.button} ${s.buttonBack}`} onClick={nextQuestionHandler}>Next</button></div>\r\n    </div>}\r\n    </div>\r\n  </div>\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch, useParams} from 'react-router-dom';\r\nimport {Test} from '../../../features/f0-test/Test';\r\nimport {Login} from '../../../features/f1-login/Login';\r\nimport {SignUp} from '../../../features/f2-signUp/SignUp';\r\nimport {Profile} from '../../../features/f3-profile/Profile';\r\nimport {Error404} from '../../../features/f9-error404/Error404';\r\nimport {RefreshPassword} from '../../../features/f5-refreshPassword/RefreshPassword';\r\nimport {SetPassword} from '../../../features/f4-setPassword/SetPassword';\r\nimport {Packs} from '../../../features/f6-packs/Packs';\r\nimport {Cards} from \"../../../features/f7-cards/Cards\";\r\nimport {LearnCards} from '../../../features/f8-learn/LearnCards';\r\n\r\nexport const PATH = {\r\n  TEST: '/test',\r\n  LOGIN: '/login',\r\n  SIGNUP: '/signup',\r\n  PROFILE: '/profile',\r\n  REFRESH: '/refresh',\r\n  SET_TOKEN: '/set/:token',\r\n  SET: '/set',\r\n  PACKS: '/packs',\r\n  ERROR404: '/404'\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n\r\n  return <>\r\n      <Switch>\r\n        <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n        <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n        <Route path={PATH.TEST} render={() => <Test/>}/>\r\n        <Route path={PATH.SIGNUP} render={() => <SignUp/>}/>\r\n        <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n        <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n        <Route path={'/cards/:packIdParam?'} render={() => <Cards/>}/>\r\n        <Route path={'/learn/:packIdParam?'} render={() => <LearnCards/>}/>\r\n        <Route path={PATH.REFRESH} render={() => <RefreshPassword/>}/>\r\n        <Route path={PATH.SET} exact render={() => <SetPassword/>}/>\r\n        <Route path={PATH.SET_TOKEN} render={() => <SetPassword/>}/>\r\n        <Route path={PATH.ERROR404} render={() => <Error404/>}/>\r\n\r\n        <Route render={() => <Redirect to={PATH.ERROR404}/>}/>\r\n      </Switch>\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../Routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m3-bll/store';\r\nimport {logout} from '../../m3-bll/auth-reducer';\r\nimport s from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const openedPackId = useSelector<AppRootStateType, string>(state => state.packs.openedPackId)\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return <div className={s.header}>\r\n    {isLoggedIn\r\n      ? <button className={s.button} onClick={logoutHandler}>Log Out</button>\r\n      : <NavLink to={PATH.LOGIN} className={s.button}>Log In</NavLink>}\r\n\r\n    <ul className={s.menu}>\r\n\r\n      <li className={s.menuItem}>\r\n        <NavLink to={PATH.PROFILE} className={s.link} activeClassName={s.active}>Profile</NavLink>\r\n      </li>\r\n\r\n      <li className={s.menuItem}>\r\n        <NavLink to={PATH.PACKS} className={s.link} activeClassName={s.active}>Packs</NavLink>\r\n      </li>\r\n\r\n      <li className={s.menuItem}>\r\n        <NavLink to={`/cards/${openedPackId}`} className={s.link} activeClassName={s.active}>Cards</NavLink>\r\n      </li>\r\n\r\n      <li className={s.menuItem}>\r\n        <NavLink to={`/learn/${openedPackId}`} className={s.link} activeClassName={s.active}>Learn</NavLink>\r\n      </li>\r\n\r\n      {/*<li className={s.menuItem}>*/}\r\n      {/*  <NavLink to={PATH.REFRESH} className={s.link} activeClassName={s.active}>Forgot your password?</NavLink>*/}\r\n      {/*</li>*/}\r\n\r\n    </ul>\r\n\r\n\r\n  </div>\r\n}","import React, {useEffect} from 'react';\r\nimport s from './AlertSnackBar.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m3-bll/store';\r\nimport {appActions} from '../../m3-bll/app-reducer';\r\n\r\n\r\nexport const AlertSnackBar: React.FC = () => {\r\n  const requestError = useSelector<AppRootStateType, string | null>(state => state.app.requestError)\r\n  const snackStyle = requestError ? `${s.snack} ${s.active}` : s.snack\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      dispatch(appActions.setRequestError(null))\r\n    }, 5000)\r\n    return () => {\r\n      clearTimeout(timerId)\r\n    }\r\n  }, [requestError])\r\n\r\n  const closeAlertHandler = () => {\r\n    dispatch(appActions.setRequestError(null))\r\n  }\r\n\r\n  return <div className={snackStyle}>\r\n    <button className={s.close} onClick={closeAlertHandler}>&times;</button>\r\n    <span className={s.errorMessage}>{requestError}</span>\r\n  </div>\r\n}","import React from 'react';\r\nimport {Header} from '../m2-components/Header/Header';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Routes} from '../m2-components/Routes/Routes';\r\nimport s from './App.module.css'\r\nimport {AlertSnackBar} from '../m2-components/AlertSnackBar/AlertSnackBar';\r\n\r\n\r\nexport const App = () => {\r\n  return <div className={s.mainPage}>\r\n    <HashRouter>\r\n      <Header/>\r\n      <div className={s.mainContainer}>\r\n        <Routes/>\r\n      </div>\r\n      <AlertSnackBar/>\r\n    </HashRouter>\r\n  </div>\r\n}\r\n\r\n\r\n// bg-grey: #e3e5e4\r\n// darker-grey: #d9d9db;\r\n// dark: #292d33;\r\n// yellow: #f1c50e;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const action = {type: 'SOME-ACTION'}\r\nexport type ActionTypes = typeof action\r\n\r\nconst initState = {}\r\nexport type StateType = typeof initState\r\n\r\nexport const testReducer = (state: StateType = initState, action: ActionTypes): StateType => {\r\n  return state\r\n}\r\n","import {applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport {authReducer} from './auth-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {testReducer} from './test-reducer';\r\nimport thunk from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {packsReducer} from './packs-reducer';\r\nimport {cardsReducer} from \"./cards-reducer\";\r\nimport {learningReducer} from './learning-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  testPage: testReducer,\r\n  profile: profileReducer,\r\n  app: appReducer,\r\n  packs: packsReducer,\r\n  cards: cardsReducer,\r\n  learning: learningReducer\r\n})\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport {App} from './main/m1-app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './main/m3-bll/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}