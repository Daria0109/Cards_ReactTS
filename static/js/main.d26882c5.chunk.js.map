{"version":3,"sources":["features/f1-login/Login.module.css","main/m2-components/Header/Header.module.css","features/f2-signUp/SingUp.module.css","features/f4-setPassword/SetPassword.module.css","features/f5-refreshPassword/RefreshPassword.module.css","features/f3-profile/Profile.module.css","features/f6-error404/Error404.module.css","main/m2-components/Preloader/Preloader.module.css","main/m1-app/App.module.css","features/f0-test/Test.tsx","main/m3-bll/app-reducer.ts","main/m4-dal/authAPI.ts","main/m3-bll/profile-reducer.ts","main/m3-bll/auth-reducer.ts","features/f1-login/Login.tsx","features/f2-signUp/SignUp.tsx","main/m2-components/Preloader/Preloader.tsx","assets/default-avatar.png","features/f3-profile/Profile.tsx","assets/404-error.jpg","features/f6-error404/Error404.tsx","features/f5-refreshPassword/RefreshPassword.tsx","features/f4-setPassword/SetPassword.tsx","main/m2-components/Routes/Routes.tsx","main/m2-components/Header/Header.tsx","main/m1-app/App.tsx","reportWebVitals.ts","main/m3-bll/test-reducer.ts","main/m3-bll/store.ts","index.tsx"],"names":["module","exports","Test","setAppStatus","status","type","initState","instance","axios","create","baseURL","withCredentials","authAPI","registrationData","post","then","res","data","loginData","delete","email","from","message","password","token","resetPasswordToken","setUserData","userName","cardsCount","userId","setProfileError","errorText","profileInitState","publicCardPacksCount","avatar","isInitialized","error","authActions","setIsLoggedIn","isLogged","setLoginError","setIsSignUp","isSignUp","setSignUpError","setIsEmailSent","isSent","setRefreshPasswordError","setIsPasswordChanged","isChanged","setPasswordError","setRequestError","authInitState","isLoggedIn","loginError","signUpError","isEmailSent","refreshPasswordError","isPasswordChanged","requestError","Login","useState","setEmail","setPassword","rememberMe","setRememberMe","useSelector","state","auth","appStatus","app","requestLoginError","dispatch","useDispatch","to","PATH","PROFILE","className","s","container","title","itemForm","placeholder","value","onChange","e","currentTarget","itemFormCheck","id","checked","htmlFor","forgot","REFRESH","link","button","onClick","a","name","_id","console","log","response","disabled","SIGNUP","overflow","SignUp","confirmPassword","setConfirmPassword","validateError","setValidateError","requestSignUpError","LOGIN","pass1","trim","pass2","Preloader","preloaderPage","preloader","Profile","timerId","isFirst","setIsFirst","profile","userAvatar","initializeError","useEffect","clearTimeout","setTimeout","userProfile","src","defaultAvatar","alt","dataRow","initializedError","Error404","error_block","error_img","errorImage","error_text","error_header","error_paragraph","RefreshPassword","sendEmailError","emailValue","setEmailValue","editBlock","sent","SetPassword","requestSetPasswordError","useParams","passValue1","setPassValue1","passValue2","setPassValue2","TEST","SET_TOKEN","SET","ERROR404","Routes","path","exact","render","Header","header","menu","menuItem","activeClassName","active","App","mainPage","mainContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","testPage","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d26882c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1F-1d\",\"title\":\"Login_title__3O7PR\",\"error\":\"Login_error__2KjR3\",\"itemForm\":\"Login_itemForm__2BJK2\",\"itemFormCheck\":\"Login_itemFormCheck__37_bu\",\"link\":\"Login_link__IcGXT\",\"forgot\":\"Login_forgot__4AR2m\",\"button\":\"Login_button__3v4h0\",\"overflow\":\"Login_overflow__1AJ09\",\"requestError\":\"Login_requestError__hw67_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ZRtb\",\"menu\":\"Header_menu__11ml9\",\"menuItem\":\"Header_menuItem__20UUI\",\"link\":\"Header_link__3rGh6\",\"active\":\"Header_active__WDb58\",\"button\":\"Header_button__1IIfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SingUp_container__2fgVE\",\"title\":\"SingUp_title__1lck9\",\"error\":\"SingUp_error__3hVWl\",\"itemForm\":\"SingUp_itemForm__2Hoqs\",\"button\":\"SingUp_button__3Pf3u\",\"itemFormBtn\":\"SingUp_itemFormBtn__TtQRn\",\"link\":\"SingUp_link__sb7Vt\",\"overflow\":\"SingUp_overflow__1x0Io\",\"requestError\":\"SingUp_requestError__3gCQ1\",\"validateError\":\"SingUp_validateError__2LNoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SetPassword_container__2GBg9\",\"title\":\"SetPassword_title__3S83t\",\"itemForm\":\"SetPassword_itemForm__Dzarj\",\"error\":\"SetPassword_error__jBYu3\",\"button\":\"SetPassword_button__1ON39\",\"overflow\":\"SetPassword_overflow__2aD2C\",\"requestError\":\"SetPassword_requestError__3xger\",\"validateError\":\"SetPassword_validateError__3mkwJ\",\"link\":\"SetPassword_link__1oY3I\",\"forgot\":\"SetPassword_forgot__20Rs4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RefreshPassword_container__rfWJy\",\"title\":\"RefreshPassword_title__1S3az\",\"itemForm\":\"RefreshPassword_itemForm__211yj\",\"sent\":\"RefreshPassword_sent__3-UqR\",\"error\":\"RefreshPassword_error__1-Yf-\",\"button\":\"RefreshPassword_button__2rCST\",\"link\":\"RefreshPassword_link__3CDqb\",\"overflow\":\"RefreshPassword_overflow__3UEPU\",\"requestError\":\"RefreshPassword_requestError__DFgPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1KS2C\",\"initializedError\":\"Profile_initializedError__3TxPO\",\"userProfile\":\"Profile_userProfile__21n0N\",\"avatar\":\"Profile_avatar__3IhEK\",\"dataRow\":\"Profile_dataRow__30J5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_block\":\"Error404_error_block__1S9L_\",\"error_img\":\"Error404_error_img__12cse\",\"error_text\":\"Error404_error_text__2UoDX\",\"error_header\":\"Error404_error_header__1A5K1\",\"error_paragraph\":\"Error404_error_paragraph__2qgdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderPage\":\"Preloader_preloaderPage__3UUGJ\",\"preloader\":\"Preloader_preloader__YlrQS\",\"load4\":\"Preloader_load4__1svV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"App_mainPage__1ZN6b\",\"mainContainer\":\"App_mainContainer__1TRPd\"};","import React from 'react';\r\n\r\nexport const Test = () => {\r\n  return <>\r\n  </>\r\n}","// A c t i o n s\r\nexport const setAppStatus = (status: RequestStatusType) => ({\r\n  type: 'cards/app/SET-STATUS', status\r\n} as const)\r\nexport type AppActionsType = ReturnType<typeof setAppStatus>\r\n\r\n\r\n// S t a t e\r\nconst initState: AppInitStateType = {\r\n  status: 'idle'\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppInitStateType = {\r\n  status: RequestStatusType\r\n\r\n}\r\n\r\n// R e d u c e r\r\nexport const appReducer = (state: AppInitStateType = initState, action: AppActionsType): AppInitStateType => {\r\n  switch (action.type) {\r\n    case 'cards/app/SET-STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport {LoginDataType, RegDataType} from '../m3-bll/auth-reducer';\r\n\r\nconst baseLocalhostURL = 'http://localhost:7542/2.0/'\r\nconst baseHerokuURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: baseHerokuURL,\r\n\twithCredentials: true,\r\n})\r\n\r\ntype ResponseUserType = {\r\n\tcreated: string\r\n\temail: string\r\n\tisAdmin: boolean\r\n\tname: string\r\n\tpublicCardPacksCount: number\r\n\trememberMe: boolean\r\n\ttoken: string\r\n\ttokenDeathTime: string\r\n\tupdated: string\r\n\tverified: boolean\r\n\t__v: number\r\n\t_id: string\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n\tsignUp(registrationData: RegDataType) {\r\n\t\treturn instance.post(\"auth/register\", registrationData)\r\n\t\t\t.then(res => res)\r\n\t},\r\n\tme() {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/me\", {})\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tlogin(loginData: LoginDataType) {\r\n\t\treturn instance.post<ResponseUserType>(\"auth/login\", loginData)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete('auth/me')\r\n\t\t\t.then(res => res)\r\n\t},\r\n\tsendEmail(email: string) {\r\n\t\treturn instance.post('auth/forgot', {\r\n\t\t\temail: email,\r\n\t\t\tfrom: 'test-front-admin <ai73a@yandex.by>',\r\n\t\t\tmessage: '<div style=\\'background-color: lime; padding: 15px\\'>' +\r\n\t\t\t\t' password recovery link:' +\r\n\t\t\t\t' <a href=\\'https://daria0109.github.io/Cards_ReactTS/#/set/$token$\\'> link</a></div>'\r\n\t\t}).then(res => res)\r\n\t},\r\n\tsetPassword(password: string, token: string) {\r\n\t\treturn instance.post('auth/set-new-password', {\r\n\t\t\tpassword,\r\n\t\t\tresetPasswordToken: token\r\n\t\t}).then(res => res)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n// created: \"2021-02-07T19:05:49.207Z\"\r\n// email: \"sergdiag19@gmail.com\"\r\n// isAdmin: false\r\n// name: \"sergdiag19@gmail.com\"\r\n// publicCardPacksCount: 0\r\n// rememberMe: false\r\n// token: \"44e9b950-6af2-11eb-a3aa-43f1dde77f4b\"\r\n// tokenDeathTime: 1612898233573\r\n// updated: \"2021-02-09T16:17:13.574Z\"\r\n// verified: false\r\n// __v: 0\r\n// _id: \"60203a0d5c268c2adcce842a\"","// A c t i o n s\r\nimport {Dispatch} from 'redux';\r\nimport {AppActionsType, setAppStatus} from './app-reducer';\r\nimport {authActions, AuthActionsType} from './auth-reducer';\r\nimport {authAPI} from '../m4-dal/authAPI';\r\n\r\nexport const setUserData = (userName: string | null, cardsCount: number | null, userId: string | null) => ({\r\n  type: 'cards/profile/SET-USER-DATA', userName, userId, cardsCount\r\n} as const)\r\nexport const setIsInitializedProfile = (isInitialized: boolean) => ({\r\n  type: 'cards/app/SET-IS-INITIALIZED', isInitialized\r\n} as const)\r\nexport const setProfileError = (errorText: string | null) => ({\r\n  type: 'cards/app/SET-ERROR', errorText\r\n} as const)\r\nexport type ProfileActionsTypes = ReturnType<typeof setUserData>\r\n  | ReturnType<typeof setIsInitializedProfile>\r\n  | ReturnType<typeof setProfileError>\r\n\r\n// S t a t e\r\nconst profileInitState = {\r\n  userName: null as string | null,\r\n  publicCardPacksCount: null as number | null,\r\n  userId: null as string | null,\r\n  avatar: '',\r\n  isInitialized: false,\r\n  error: null as string | null\r\n}\r\nexport type ProfileStateType = typeof profileInitState\r\n\r\n// R d u c e r\r\nexport const profileReducer = (state: ProfileStateType = profileInitState, action: ProfileActionsTypes): ProfileStateType => {\r\n  switch (action.type) {\r\n    case 'cards/profile/SET-USER-DATA':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n        publicCardPacksCount: action.cardsCount,\r\n        userId: action.userId\r\n      }\r\n    case 'cards/app/SET-IS-INITIALIZED':\r\n      return {\r\n        ...state,\r\n        isInitialized: action.isInitialized\r\n      }\r\n    case 'cards/app/SET-ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.errorText\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\n\r\n// T h u n k\r\nexport const initializeProfile = () => {\r\n  return async (dispatch: Dispatch<AppActionsType | ProfileActionsTypes | AuthActionsType>) => {\r\n    try {\r\n      dispatch(setAppStatus('loading'))\r\n      const data = await authAPI.me()\r\n      dispatch(authActions.setIsLoggedIn(true))\r\n      dispatch(setIsInitializedProfile(true))\r\n      dispatch(setUserData(data.name, data.publicCardPacksCount, data._id))\r\n      console.log('Initialized')\r\n\r\n    } catch (error) {\r\n      dispatch((setProfileError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred')))\r\n      console.log('NOT Initialized')\r\n\r\n    } finally {\r\n      dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {ProfileActionsTypes, setUserData} from './profile-reducer';\r\nimport {AppActionsType, setAppStatus} from './app-reducer';\r\nimport {authAPI} from '../m4-dal/authAPI';\r\n\r\n// A c t i o n s\r\nexport const authActions = {\r\n  setIsLoggedIn: (isLogged: boolean) => ({\r\n    type: 'cards/auth/SET-IS-LOGGED-IN', isLogged} as const),\r\n  setLoginError: (errorText: string | null) => ({\r\n    type: 'cards/auth/SET-LOGIN-ERROR', errorText} as const),\r\n  setIsSignUp: (isSignUp: boolean) => ({\r\n    type: 'cards/auth/SET-IS-SIGN-UP', isSignUp} as const),\r\n  setSignUpError: (errorText: string | null) => ({\r\n    type: 'cards/auth/SET-SIGNUP-ERROR', errorText} as const),\r\n  setIsEmailSent: (isSent: boolean) => ({\r\n    type: 'cards/auth/SET-IS-EMAIL-SENT', isSent} as const),\r\n  setRefreshPasswordError: (errorText: string | null) => ({\r\n    type: 'cards/auth/SET-REFRESH-ERROR', errorText} as const),\r\n  setIsPasswordChanged: (isChanged: boolean) => ({\r\n    type: 'cards/auth/SET-IS-PASSWORD-CHANGED', isChanged} as const),\r\n  setPasswordError: (errorText: string | null) => ({\r\n    type: 'cards/auth/SET-PASSWORD-ERROR', errorText} as const),\r\n  setRequestError: (error: string) => ({\r\n    type: 'cards/auth/SET-REQUEST-ERROR', error} as const)\r\n}\r\ntype ActionsType<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type AuthActionsType = ReturnType<ActionsType<typeof authActions>>\r\n\r\n\r\n// S t a t e\r\nconst authInitState = {\r\n  isLoggedIn: false,\r\n  loginError: null as string | null,\r\n  isSignUp: false,\r\n  signUpError: null as string | null,\r\n  isEmailSent: false,\r\n  refreshPasswordError: null as string | null,\r\n  isPasswordChanged: false,\r\n  setPasswordError: null as string | null,\r\n\r\n  requestError: 'Errrrrrrrrrrrrrrrror'\r\n}\r\nexport type AuthStateType = typeof authInitState\r\n\r\n\r\n// T h u n k\r\nexport type RegDataType = {\r\n  email: string\r\n  password: string\r\n}\r\nexport const signUp = (registrationData: RegDataType) => {\r\n  return async (dispatch: Dispatch<AuthActionsType | AppActionsType>) => {\r\n    try {\r\n      dispatch(setAppStatus('loading'))\r\n      await authAPI.signUp(registrationData)\r\n      dispatch(authActions.setIsSignUp(true))\r\n      console.log('SignUn')\r\n    } catch (error) {\r\n      dispatch(authActions.setSignUpError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('NOT SignUn')\r\n    } finally {\r\n      dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport type LoginDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\nexport const login = (loginData: LoginDataType) => {\r\n  return async (dispatch: Dispatch<AuthActionsType | ProfileActionsTypes | AppActionsType>) => {\r\n    try {\r\n      dispatch(setAppStatus('loading'))\r\n      const data = await authAPI.login(loginData)\r\n      dispatch(setUserData(data.name, data.publicCardPacksCount, data._id))\r\n      dispatch(authActions.setIsLoggedIn(true))\r\n      console.log('LogIn')\r\n\r\n    } catch (error) {\r\n      dispatch(authActions.setLoginError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('NOT LogIn')\r\n    } finally {\r\n      dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const logout = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      // dispatch(setAppStatus('loading'))\r\n      await authAPI.logout()\r\n      dispatch(authActions.setIsLoggedIn(false))\r\n      dispatch(setUserData(null, null, null))\r\n      console.log('LogOut')\r\n    } catch (error) {\r\n      dispatch(authActions.setLoginError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('NOT LogOut')\r\n\r\n    } finally {\r\n      // dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const sendEmail = (email: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      dispatch(setAppStatus('loading'))\r\n      await authAPI.sendEmail(email)\r\n      dispatch(authActions.setIsEmailSent(true))\r\n      console.log('Email is sent')\r\n    } catch (error) {\r\n      dispatch(authActions.setRefreshPasswordError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('Email is NOT sent')\r\n    } finally {\r\n      dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\nexport const setPassword = (password: string, token: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      dispatch(setAppStatus('loading'))\r\n      await authAPI.setPassword(password, token)\r\n      dispatch(authActions.setIsPasswordChanged(true))\r\n      console.log('Password set')\r\n    } catch(error) {\r\n      dispatch(authActions.setPasswordError(error.response ? error.response.data.error\r\n        : error.message ? error.message\r\n          : 'Some error occurred'))\r\n      console.log('Password NOT set')\r\n    } finally {\r\n      dispatch(setAppStatus('succeeded'))\r\n    }\r\n  }\r\n}\r\n\r\n// R e d u c e r\r\nexport const authReducer = (state: AuthStateType = authInitState, action: AuthActionsType): AuthStateType => {\r\n  switch (action.type) {\r\n    case 'cards/auth/SET-LOGIN-ERROR':\r\n      return {\r\n        ...state,\r\n        loginError: action.errorText\r\n      }\r\n    case 'cards/auth/SET-IS-LOGGED-IN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLogged\r\n      }\r\n    case 'cards/auth/SET-IS-SIGN-UP': {\r\n      return {\r\n        ...state,\r\n        isSignUp: action.isSignUp\r\n      }\r\n    }\r\n    case 'cards/auth/SET-SIGNUP-ERROR': {\r\n      return {\r\n        ...state,\r\n        signUpError: action.errorText\r\n      }\r\n    }\r\n    case 'cards/auth/SET-IS-EMAIL-SENT':\r\n      return {\r\n        ...state,\r\n        isEmailSent: action.isSent\r\n      }\r\n    case 'cards/auth/SET-REFRESH-ERROR':\r\n      return {\r\n        ...state,\r\n        refreshPasswordError: action.errorText\r\n      }\r\n    case 'cards/auth/SET-IS-PASSWORD-CHANGED':\r\n      return {\r\n        ...state,\r\n        isPasswordChanged: action.isChanged\r\n      }\r\n    case 'cards/auth/SET-PASSWORD-ERROR':\r\n      return {\r\n        ...state,\r\n        setPasswordError: action.errorText\r\n      }\r\n    case 'cards/auth/SET-REQUEST-ERROR':\r\n      return {\r\n        ...state,\r\n        requestError: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {authActions, login} from '../../main/m3-bll/auth-reducer';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport s from './Login.module.css'\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\n\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState('abcabc@grr.la')\r\n  const [password, setPassword] = useState('777777777')\r\n  const [rememberMe, setRememberMe] = useState(false)\r\n\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const requestLoginError = useSelector<AppRootStateType, string | null>(state => state.auth.loginError)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const changeEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value)\r\n  }\r\n  const changePasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const changeRememberMeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRememberMe(e.currentTarget.checked)\r\n  }\r\n  const onSubmit = () => {\r\n    dispatch(login({email, password, rememberMe}))\r\n    dispatch(authActions.setLoginError(null))\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to={PATH.PROFILE}/>\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h2 className={s.title}>Log in</h2>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'Enter email...'} value={email} onChange={changeEmailHandler}/>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <input type=\"text\" placeholder={'Enter password...'} value={password} onChange={changePasswordHandler}/>\r\n      </div>\r\n      <div className={`${s.itemForm} ${s.itemFormCheck}`}>\r\n        <input id='remember' type=\"checkbox\" checked={rememberMe}\r\n               onChange={changeRememberMeHandler}/>\r\n        <label htmlFor='remember'>Remember me</label>\r\n      </div>\r\n\r\n      <div className={s.forgot}>\r\n        <NavLink to={PATH.REFRESH} className={s.link}>Forgot your password?</NavLink>\r\n      </div>\r\n      <div className={s.itemForm}>\r\n        <button className={s.button} onClick={onSubmit} disabled={appStatus === 'loading'}>Submit</button>\r\n      </div>\r\n        <NavLink to={PATH.SIGNUP} className={s.link}>Sign Up</NavLink>\r\n\r\n      {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n\r\n\r\n      {requestLoginError && <div className={s.requestError}>{requestLoginError}</div>}\r\n\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport s from './SingUp.module.css'\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {authActions, signUp} from '../../main/m3-bll/auth-reducer';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\n\r\nexport const SignUp = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [validateError, setValidateError] = useState('')\r\n\r\n  const isSignUp = useSelector<AppRootStateType, boolean>(state => state.auth.isSignUp)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const requestSignUpError = useSelector<AppRootStateType,string | null>(state => state.auth.signUpError)\r\n  const status = useSelector<AppRootStateType, string>(state => state.app.status)\r\n  const dispatch = useDispatch()\r\n\r\n  const changeEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value)\r\n  }\r\n  const changePasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValidateError('')\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const confirmPasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValidateError('')\r\n    setConfirmPassword(e.currentTarget.value)\r\n  }\r\n  const onSubmit = () => {\r\n    const pass1 = password.trim()\r\n    const pass2 = confirmPassword.trim()\r\n    if (pass1 !== pass2) {\r\n      setValidateError('The password values must be equal to!')\r\n      return\r\n    }\r\n    if (pass1 === pass2) {\r\n      dispatch(signUp({email, password}))\r\n      dispatch(authActions.setSignUpError(null))\r\n    }\r\n  }\r\n\r\n  if (isSignUp) {\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  return <div className={s.container}>\r\n    <h2 className={s.title}>Sign Up</h2>\r\n    {status === 'loading' && <div>Please wait...</div>}\r\n    <div className={s.itemForm}>\r\n      <input type=\"text\" placeholder={'Enter email...'} value={email} onChange={changeEmailHandler}/>\r\n    </div>\r\n    <div className={s.itemForm}>\r\n      <input type=\"text\" placeholder={'Enter password...'} value={password} onChange={changePasswordHandler}/>\r\n    </div>\r\n    <div className={s.itemForm}>\r\n      <input type=\"text\" placeholder={'Confirm password...'} value={confirmPassword} onChange={confirmPasswordHandler}/>\r\n    </div>\r\n    {validateError && <div className={s.validateError}>{validateError}</div>}\r\n    {requestSignUpError && <div className={s.requestError}>{requestSignUpError}</div>}\r\n    <div className={s.itemForm}>\r\n      <button className={s.button} onClick={onSubmit} disabled={appStatus === 'loading'}>Submit</button>\r\n    </div>\r\n      <NavLink to={PATH.LOGIN} className={s.link}>Log In</NavLink>\r\n\r\n    {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n\r\n  </div>\r\n}","import React from 'react';\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n  return <div className={s.preloaderPage}>\r\n    <div className={s.preloader}>Loading...</div>\r\n  </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.98d79ab0.png\";","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from './Profile.module.css'\r\nimport {initializeProfile, setProfileError} from '../../main/m3-bll/profile-reducer';\r\nimport {Preloader} from '../../main/m2-components/Preloader/Preloader';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport defaultAvatar from './../../assets/default-avatar.png'\r\nimport {authActions} from '../../main/m3-bll/auth-reducer';\r\n\r\n\r\n\r\nexport const Profile = () => {\r\n  const [isFirst, setIsFirst] = useState(true)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const userId = useSelector<AppRootStateType, string | null>(state => state.profile.userId)\r\n  const userName = useSelector<AppRootStateType, string | null>(state => state.profile.userName)\r\n  const cardsCount = useSelector<AppRootStateType, number | null>(state => state.profile.publicCardPacksCount)\r\n  const userAvatar = useSelector<AppRootStateType, string>(state => state.profile.avatar)\r\n  const isInitialized = useSelector<AppRootStateType, boolean>(state => state.profile.isInitialized)\r\n  const initializeError = useSelector<AppRootStateType, null | string>(state => state.profile.error)\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const dispatch = useDispatch();\r\n  let timerId: any;\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      dispatch(initializeProfile())\r\n    }\r\n    dispatch(authActions.setLoginError(null))\r\n    return function cleanup () {\r\n      clearTimeout(timerId)\r\n    }\r\n  }, [userId])\r\n\r\n  if (appStatus === 'loading') {\r\n    return <Preloader/>\r\n  }\r\n\r\n  if (!isFirst) {\r\n    dispatch(setProfileError(null))\r\n    return <Redirect to={PATH.LOGIN}/>\r\n  }\r\n\r\n  if (initializeError) {\r\n    timerId = setTimeout(() => {\r\n      setIsFirst(false)\r\n    }, 2000)\r\n  }\r\n\r\n\r\n  //\r\n  // if (!isLoggedIn && isInitialized) {\r\n  //   return <Redirect to={PATH.LOGIN}/>\r\n  // }\r\n\r\n  return <div className={s.profile}>\r\n    {isLoggedIn && <div className={s.userProfile}>\r\n      {!userAvatar && <div className={s.avatar}><img src={defaultAvatar} alt={'Avatar'}/></div>}\r\n      <div className={s.data}>\r\n        <div className={s.dataRow}>Name: <span>{userName}</span></div>\r\n        <div className={s.dataRow}>Count of Cards: <span>{cardsCount}</span></div>\r\n      </div>\r\n    </div>}\r\n    {initializeError && <div className={s.initializedError}>{initializeError}</div>}\r\n\r\n  </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/404-error.8c0adfd2.jpg\";","import React from 'react';\r\nimport s from './Error404.module.css'\r\nimport errorImage from './../../assets/404-error.jpg'\r\n\r\nexport const Error404 = () => {\r\n  return <div className={s.error_block}>\r\n    <img className={s.error_img} src={errorImage} alt=\"404\"/>\r\n    <div className={s.error_text}>\r\n      <div className={s.error_header}>OOOPS! PAGE NOT FOUND...</div>\r\n      <p className={s.error_paragraph}>You must have picked the wrong door because I haven't been able to\r\n        lay my eye on the page you've been searching for.</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport s from './RefreshPassword.module.css'\r\nimport {authActions, sendEmail} from '../../main/m3-bll/auth-reducer';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\n\r\nexport const RefreshPassword = () => {\r\n  const isEmailSent = useSelector<AppRootStateType, boolean>(state => state.auth.isEmailSent)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const sendEmailError = useSelector<AppRootStateType, string | null>(state => state.auth.refreshPasswordError)\r\n  const dispatch = useDispatch();\r\n\r\n  const [emailValue, setEmailValue] = useState('')\r\n\r\n  const changeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmailValue(e.currentTarget.value)\r\n  }\r\n  const sendEmailHandler = () => {\r\n    dispatch(sendEmail(emailValue))\r\n    dispatch(authActions.setRefreshPasswordError(null))\r\n  }\r\n\r\n  return <div className={s.container}>\r\n    {!isEmailSent &&\r\n    <div>\r\n      <h2 className={s.title}>Forgot your password?</h2>\r\n      <div className={s.editBlock}>\r\n        <div className={s.itemForm}>\r\n          <input type='text' placeholder='Enter email...' value={emailValue} onChange={changeEmailHandler}/>\r\n        </div>\r\n        <div className={s.itemForm}>\r\n          <button className={s.button} onClick={sendEmailHandler} disabled={appStatus === 'loading'}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>}\r\n\r\n    {isEmailSent &&\r\n    <div className={s.sent}>\r\n      <p>Success!</p>\r\n      <p>The link was sent to your email!</p>\r\n    </div>}\r\n\r\n    {sendEmailError && <div className={s.requestError}>{sendEmailError}</div>}\r\n\r\n    <NavLink className={s.link} to={PATH.LOGIN}>Log In</NavLink>\r\n\r\n    {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n\r\n  </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {NavLink, Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './SetPassword.module.css'\r\nimport {AppRootStateType} from '../../main/m3-bll/store';\r\nimport {authActions, setPassword} from '../../main/m3-bll/auth-reducer';\r\nimport {RequestStatusType} from '../../main/m3-bll/app-reducer';\r\nimport {PATH} from '../../main/m2-components/Routes/Routes';\r\n\r\ntype ParamsType = {\r\n  token?: string | undefined\r\n}\r\n\r\nexport const SetPassword = () => {\r\n  const isPasswordChanged = useSelector<AppRootStateType, boolean>(state => state.auth.isPasswordChanged)\r\n  const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n  const requestSetPasswordError = useSelector<AppRootStateType, string | null>(state => state.auth.setPasswordError)\r\n  const dispatch = useDispatch();\r\n\r\n  const {token} = useParams<ParamsType>()\r\n\r\n  const [passValue1, setPassValue1] = useState('')\r\n  const [passValue2, setPassValue2] = useState('')\r\n  const [validateError, setValidateError] = useState('')\r\n\r\n  const changePass1Handler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassValue1(e.currentTarget.value)\r\n  }\r\n  const changePass2Handler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassValue2(e.currentTarget.value)\r\n  }\r\n  const setPassHandler = () => {\r\n    const pass1 = passValue1.trim()\r\n    const pass2 = passValue2.trim()\r\n    if (!pass1 && !pass2 ) {\r\n      setValidateError('Password is required')\r\n      return\r\n    }\r\n    if (pass1 !== pass2) {\r\n      setValidateError('The password values must be equal to!')\r\n      return\r\n    }\r\n    if (!token) {\r\n      setValidateError('Send your email for updating the password!')\r\n      return\r\n    }\r\n    if (token && pass1 === pass2) {\r\n      dispatch(setPassword(pass1, token))\r\n      setValidateError('')\r\n      dispatch(authActions.setPasswordError(null))\r\n    }\r\n  }\r\n\r\n  if (isPasswordChanged) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  return <div className={s.container}>\r\n    <h2 className={s.title}>Set new password</h2>\r\n    <div className={s.itemForm}>\r\n      <input type='text' placeholder='New password...' value={passValue1} onChange={changePass1Handler}/>\r\n    </div>\r\n    <div className={s.itemForm}>\r\n      <input type='text' placeholder='Confirm password...' value={passValue2} onChange={changePass2Handler}/>\r\n    </div>\r\n\r\n    {validateError &&\r\n    <div className={s.validateError}>\r\n      {validateError}\r\n    </div>}\r\n\r\n    {requestSetPasswordError &&\r\n    <div className={s.requestError}>\r\n      {requestSetPasswordError}\r\n    </div>}\r\n\r\n    <div className={s.itemForm}>\r\n      <button className={s.button} onClick={setPassHandler}  disabled={appStatus === 'loading'}>Submit</button>\r\n    </div>\r\n\r\n    <div className={s.forgot}>\r\n      <NavLink to={PATH.REFRESH} className={s.link}>Forgot your password?</NavLink>\r\n    </div>\r\n\r\n\r\n    {appStatus === 'loading' && <div className={s.overflow}>Please, wait...</div>}\r\n\r\n  </div>\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch, useParams} from 'react-router-dom';\r\nimport {Test} from '../../../features/f0-test/Test';\r\nimport {Login} from '../../../features/f1-login/Login';\r\nimport {SignUp} from '../../../features/f2-signUp/SignUp';\r\nimport {Profile} from '../../../features/f3-profile/Profile';\r\nimport {Error404} from '../../../features/f6-error404/Error404';\r\nimport {RefreshPassword} from '../../../features/f5-refreshPassword/RefreshPassword';\r\nimport {SetPassword} from '../../../features/f4-setPassword/SetPassword';\r\n\r\nexport const PATH = {\r\n  TEST: '/test',\r\n  LOGIN: '/login',\r\n  SIGNUP: '/signup',\r\n  PROFILE: '/profile',\r\n  REFRESH: '/refresh',\r\n  SET_TOKEN: '/set/:token',\r\n  SET: '/set',\r\n  ERROR404: '/404'\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n\r\n  return <>\r\n      <Switch>\r\n        <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n        <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n        <Route path={PATH.TEST} render={() => <Test/>}/>\r\n        <Route path={PATH.SIGNUP} render={() => <SignUp/>}/>\r\n        <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n        <Route path={PATH.REFRESH} render={() => <RefreshPassword/>}/>\r\n        <Route path={PATH.SET} exact render={() => <SetPassword/>}/>\r\n        <Route path={PATH.SET_TOKEN} render={() => <SetPassword/>}/>\r\n        <Route path={PATH.ERROR404} render={() => <Error404/>}/>\r\n\r\n        <Route render={() => <Redirect to={PATH.ERROR404}/>}/>\r\n      </Switch>\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../Routes/Routes';\r\nimport s from './Header.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m3-bll/store';\r\nimport {logout} from '../../m3-bll/auth-reducer';\r\n\r\nexport const Header = () => {\r\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return <div className={s.header}>\r\n    {isLoggedIn\r\n      ? <button className={s.button} onClick={logoutHandler}>Log Out</button>\r\n      : <NavLink to={PATH.LOGIN} className={s.button}>Log In</NavLink>}\r\n\r\n    <ul className={s.menu}>\r\n      <li className={s.menuItem}>\r\n        <NavLink to={PATH.TEST} className={s.link} activeClassName={s.active}>Test Page</NavLink>\r\n      </li>\r\n\r\n      <li className={s.menuItem}>\r\n        <NavLink to={PATH.PROFILE} className={s.link} activeClassName={s.active}>Profile</NavLink>\r\n      </li>\r\n\r\n      {/*<li className={s.menuItem}>*/}\r\n      {/*  <NavLink to={PATH.LOGIN} className={s.link} activeClassName={s.active}>Login</NavLink>*/}\r\n      {/*</li>*/}\r\n\r\n      {/*<li className={s.menuItem}>*/}\r\n      {/*  <NavLink to={PATH.SIGNUP} className={s.link} activeClassName={s.active}>Sign Up</NavLink>*/}\r\n      {/*</li>*/}\r\n\r\n      <li className={s.menuItem}>\r\n        <NavLink to={PATH.REFRESH} className={s.link} activeClassName={s.active}>Forgot your password?</NavLink>\r\n      </li>\r\n\r\n      {/*<li className={s.menuItem}>*/}\r\n      {/*  <NavLink to={PATH.SET} className={s.link} activeClassName={s.active}>Set password</NavLink>*/}\r\n      {/*</li>*/}\r\n    </ul>\r\n\r\n\r\n  </div>\r\n}","import React from 'react';\r\nimport {Header } from '../m2-components/Header/Header';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Routes} from '../m2-components/Routes/Routes';\r\nimport s from './App.module.css'\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../m3-bll/store';\r\n\r\n\r\nexport const App = () => {\r\n  const isInitialized = useSelector<AppRootStateType, boolean>(state => state.profile.isInitialized)\r\n  return <div className={s.mainPage}>\r\n    <HashRouter>\r\n      <Header/>\r\n      <div className={s.mainContainer}>\r\n      <Routes/>\r\n      </div>\r\n    </HashRouter>\r\n    </div>\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const action = {type: 'SOME-ACTION'}\r\nexport type ActionTypes = typeof action\r\n\r\nconst initState = {}\r\nexport type StateType = typeof initState\r\n\r\nexport const testReducer = (state: StateType = initState, action: ActionTypes): StateType => {\r\n  return state\r\n}\r\n","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport {authReducer} from './auth-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {testReducer} from './test-reducer';\r\nimport thunk from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  testPage: testReducer,\r\n  profile: profileReducer,\r\n  app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport {App} from './main/m1-app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './main/m3-bll/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}